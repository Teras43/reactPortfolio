{"version":3,"sources":["components/header.tsx","components/view.tsx","views/homePage.tsx","assets/images/angularMovieDBImg.png","assets/images/reactECommerceStoreImg.png","assets/images/angularGolfScorecardImg.jpeg","assets/images/javaScriptHangManImg.png","assets/pdf/myResume.pdf","views/resumeTab.tsx","components/navBar.tsx","components/text.tsx","components/card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderStyle","styled","div","Header","text","ViewStyle","BodyStyle","View","headerText","center","children","projects","title","description","image","site","mobile","AnimationDiv","ContactDiv","ProjectDiv","HomePage","allProjects","map","project","index","fontSize","italic","color","link","mask","pdfjs","GlobalWorkerOptions","workerSrc","version","ResumeDiv","BorderDiv","Resume","screenWidth","window","innerWidth","pdfWidth","Math","min","file","myResume","onLoadSuccess","console","log","externalLinkTarget","pageNumber","width","NavBarItem","viewName","onRouteSelect","isSelected","formatRouteName","useCallback","replace","NavBarItemStyle","onClick","PageWrapper","NavBarStyle","NavBar","ViewType","Views","useState","currentRoute","setCurrentRoute","getRoutes","Object","keys","TextRenderer","align","bold","LinkRenderer","a","underline","Text","newTab","href","target","undefined","CardDiv","BackgroundDiv","ImageDiv","ProjectImg","img","TextDiv","TitleDiv","DescriptionDiv","Card","open","navSite","src","alt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b3e3f52.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\n/** Types */\ntype Props = {\n  text: string;\n};\n\n/** Renders text as a header. */\nconst Header = ({ text }: Props) => <HeaderStyle>{text}</HeaderStyle>;\n\n/** Styles */\nconst HeaderStyle = styled.div`\n  width: 100%;\n  height: 55px;\n  font-size: 22px;\n  background-color: #e4e4e4;\n  box-shadow: 0px 4px 21px 0px rgba(0, 0, 0, 0.4);\n  box-sizing: border-box;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1;\n`;\n\n/** Exports */\nexport default Header;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"./\";\n\n/** Types */\ntype Props = {\n  /** Header displayed at top of page. */\n  headerText?: string;\n  /** Centers content in view. */\n  center?: boolean;\n  children?: ReactNode;\n};\n\n/** Base view component. */\nconst View = ({ headerText, center, children }: Props) => {\n  return (\n    <ViewStyle>\n      {headerText && <Header text={headerText} />}\n      <BodyStyle {...center}>{children}</BodyStyle>\n    </ViewStyle>\n  );\n};\n\n/** Styles */\nconst ViewStyle = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst BodyStyle = styled.div`\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  padding-top: 8px;\n`;\n\n/** Exports */\nexport default View;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { View } from \"../components\";\nimport { Text } from \"../components\";\nimport { Card } from \"../components\";\nimport movieDbImg from \"../assets/images/angularMovieDBImg.png\";\nimport ecommerceStoreImg from \"../assets/images/reactECommerceStoreImg.png\";\nimport golfScorecardImg from \"../assets/images/angularGolfScorecardImg.jpeg\";\nimport hangManImg from \"../assets/images/javaScriptHangManImg.png\";\n\n/** Array with Objects of project data for each project in the cards. */\nconst projects = [\n  {\n    title: \"Angular MovieDB\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 and The Movie Database API to create a site you can rate and review movies you see!\",\n    image: movieDbImg,\n    site: \"https://teras43.github.io/movieGroupProject/\",\n    mobile: true,\n  },\n  {\n    title: \"React E-Commerce Store\",\n    description:\n      \"Best viewed on mobile! Uses React.js and a mock API to create a site you can browse items and add them to your cart to buy.\",\n    image: ecommerceStoreImg,\n    site: \"https://teras43.github.io/eCommerceStore/\",\n    mobile: true,\n  },\n  {\n    title: \"Angular Golf Scorecard\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 to select a golf course, add players to your golf game and keep track of all the scores for each person.\",\n    image: golfScorecardImg,\n    site: \"https://teras43.github.io/golf-scorecard-angular/\",\n    mobile: true,\n  },\n  {\n    title: \"JavaScript Hangman\",\n    description:\n      \"Best viewed on desktop! A simple JavaScript game that lets you play a game of hangman from a predetermined set of words.\",\n    image: hangManImg,\n    site: \"https://teras43.github.io/Hang-Man/\",\n    mobile: false,\n  },\n];\n\n/** The main page of the app. */\nconst HomePage = () => {\n  const allProjects = projects.map((project, index) => {\n    return (\n      <Card\n        key={index}\n        image={project.image}\n        title={project.title}\n        description={project.description}\n        site={project.site}\n        mobile={project.mobile}\n      ></Card>\n    );\n  });\n\n  return (\n    <View headerText=\"Projects\">\n      <AnimationDiv>\n        <ContactDiv>\n          <Text fontSize={24} italic>\n            Brandon Curtis\n          </Text>\n          <Text\n            fontSize={19}\n            italic\n            color=\"black\"\n            link=\"email\"\n            mask=\"Email Me!\"\n          >\n            Brandcurtis43@gmail.com\n          </Text>\n          <Text fontSize={16} italic color=\"black\" link mask=\"My Github\">\n            https://github.com/Teras43\n          </Text>\n        </ContactDiv>\n        <ProjectDiv>{allProjects}</ProjectDiv>\n      </AnimationDiv>\n    </View>\n  );\n};\n\n/** Styles */\nconst AnimationDiv = styled.div`\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst ContactDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 30px;\n  padding-top: 20px;\n`;\n\nconst ProjectDiv = styled.div`\n  display: flex;\n`;\n\n/** Exports */\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/angularMovieDBImg.c8bfe0f3.png\";","export default __webpack_public_path__ + \"static/media/reactECommerceStoreImg.9f7999c6.png\";","export default __webpack_public_path__ + \"static/media/angularGolfScorecardImg.58424e1e.jpeg\";","export default __webpack_public_path__ + \"static/media/javaScriptHangManImg.c2e8fdc5.png\";","export default __webpack_public_path__ + \"static/media/myResume.8d3b001e.pdf\";","import React from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { View } from \"../components\";\nimport myResume from \"../assets/pdf/myResume.pdf\";\nimport styled from \"styled-components\";\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n/** Basic resume view. */\nconst Resume = () => {\n  const screenWidth = window.innerWidth;\n  const pdfWidth = Math.min(screenWidth - screenWidth * 0.25, 850);\n\n  return (\n    <View headerText=\"Resume\">\n      <ResumeDiv>\n        <BorderDiv>\n          <Document\n            file={myResume}\n            onLoadSuccess={console.log}\n            externalLinkTarget=\"_blank\"\n          >\n            <Page pageNumber={1} width={pdfWidth} />\n          </Document>\n          <Document\n            file={myResume}\n            onLoadSuccess={console.log}\n            externalLinkTarget=\"_blank\"\n          >\n            <Page pageNumber={2} width={pdfWidth} />\n          </Document>\n        </BorderDiv>\n      </ResumeDiv>\n    </View>\n  );\n};\n\n/** Styles */\nconst ResumeDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50vw;\n  margin: auto;\n  box-sizing: border-box;\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst BorderDiv = styled.div`\n  border: 1px solid black;\n  height: auto;\n  width: 100%;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\n/** Exports */\nexport default Resume;\n","import React, { ReactNode, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Views from \"../views\";\n\n/** Types */\ntype NavBarItemProps = {\n  viewName: string;\n  onRouteSelect: (viewName: string) => void;\n  isSelected: boolean;\n};\n\n/** Controls displaying of the views and navigation. */\nconst NavBar = () => {\n  const ViewType = Views as Record<string, () => ReactNode>;\n  const [currentRoute, setCurrentRoute] = useState<string>(\"HomePage\");\n\n  const getRoutes = useCallback(() => {\n    const viewNames = Object.keys(Views);\n\n    return viewNames.map((viewName, index) => (\n      <NavBarItem\n        key={index}\n        onRouteSelect={setCurrentRoute}\n        viewName={viewName}\n        isSelected={currentRoute === viewName}\n      ></NavBarItem>\n    ));\n  }, [currentRoute]);\n\n  return (\n    <PageWrapper>\n      <NavBarStyle>{getRoutes()}</NavBarStyle>\n      {ViewType[currentRoute]?.()}\n    </PageWrapper>\n  );\n};\n\nconst NavBarItem = ({\n  viewName,\n  onRouteSelect,\n  isSelected,\n}: NavBarItemProps) => {\n  const formatRouteName = useCallback(\n    () => viewName.replace(/([A-Z]+)/g, \" $1\"),\n    [viewName]\n  );\n\n  return (\n    <NavBarItemStyle\n      isSelected={isSelected}\n      onClick={() => onRouteSelect(viewName)}\n    >\n      {formatRouteName()}\n    </NavBarItemStyle>\n  );\n};\n\n/** Styles */\nconst PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst NavBarStyle = styled.div`\n  width: 100vw;\n  height: 55px;\n  font-size: 22px;\n  background-color: #e4e4e4;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  z-index: 2;\n`;\n\nconst NavBarItemStyle = styled.div<{ isSelected: boolean }>`\n  margin-right: 4px;\n  padding-left: 18px;\n  user-select: none;\n  cursor: pointer;\n  padding-right: 18px;\n  border-bottom: ${({ isSelected }) =>\n    isSelected ? \"1px solid black\" : \"none\"};\n  margin-bottom: ${({ isSelected }) => (isSelected ? \"8px\" : \"0\")};\n  @keyframes Bounce {\n    50% {\n      margin-bottom: 15px;\n    }\n    75% {\n      margin-top: 10px;\n    }\n  }\n  animation: Bounce 1s infinite;\n  animation-play-state: paused;\n  transform: rotate(0deg);\n  @keyframes Reset {\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n  &:not(:hover) {\n    animation: Reset 0.5s 1;\n  }\n  &:hover {\n    animation-play-state: running;\n  }\n`;\n\n/** Exports */\nexport default NavBar;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\n/** Types */\n\ntype Props = {\n  /** Whether to justify the text to the center, left, right, top or bottom. Default: left */\n  align?: \"center\" | \"left\" | \"right\";\n  /** Bolds the text. Default: false */\n  bold?: boolean;\n  /** Sets text to be italic. Default: false */\n  italic?: boolean;\n  /** Colors the text. Default: black */\n  color?: string;\n  /** Sets the font size in pixels. Default: 14 */\n  fontSize?: number;\n  /** Flags the text as a link (of a certain type if chosen, will use a generic if not),\n   * and will be rendered as an <a> tag instead. Default: false */\n  link?: boolean | \"email\" | \"telephone\" | \"textMessage\";\n  /** Tells the component whether to display an underline on the link (if set). Default: true */\n  underline?: boolean;\n  /** Masks a link with different text. Ignored if the text is not a link. */\n  mask?: string;\n  /** Indicates whether to open a link in a new tab or not. Default: true */\n  newTab?: boolean;\n  children?: ReactNode;\n};\n\n/** A malleable component for rendering text. */\nconst Text = ({\n  align = \"left\",\n  bold = false,\n  italic = false,\n  color = \"black\",\n  fontSize = 14,\n  link = false,\n  underline = true,\n  mask,\n  newTab = true,\n  children,\n}: Props) =>\n  !link ? (\n    <TextRenderer\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {children}\n    </TextRenderer>\n  ) : (\n    <LinkRenderer\n      href={\n        link === \"email\"\n          ? `mailto:${children as string}`\n          : link === \"telephone\"\n          ? `tel:${children as string}`\n          : link === \"textMessage\"\n          ? `sms:${children as string}`\n          : (children as string)\n      }\n      target={newTab ? \"_blank\" : undefined}\n      underline={underline}\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {mask ? mask : children}\n    </LinkRenderer>\n  );\n\n/** Styles */\n\nconst TextRenderer = styled.div<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\nconst LinkRenderer = styled.a<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-decoration: ${({ underline }) => (underline ? \"underline\" : \"none\")};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\n\n/** Exports */\n\nexport default Text;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \"../components\";\n\n/** Types */\ntype Props = {\n  /** Title of the project in the card. */\n  title: string;\n  /** Small description of project in card. */\n  description: string;\n  /** Thumbnail image for project in card. */\n  image: string;\n  /** Website the project is hosted at. */\n  site: string;\n  /** Will size thumbnail image to mobile or desktop size. */\n  mobile?: boolean;\n};\n\n/** Card component that each project will displayed inside. */\nconst Card = ({ title, description, image, site, mobile = true }: Props) => {\n  const navSite = (site: any) => {\n    window.open(site);\n  };\n\n  return (\n    <CardDiv>\n      <BackgroundDiv onClick={() => navSite(site)}>\n        <ImageDiv mobile={mobile}>\n          <ProjectImg src={image} alt=\"Thumbnail for Project\"></ProjectImg>\n        </ImageDiv>\n      </BackgroundDiv>\n      <TextDiv>\n        <TitleDiv>\n          <Text fontSize={18} bold link mask={title}>\n            {site}\n          </Text>\n        </TitleDiv>\n        <DescriptionDiv>\n          <Text fontSize={16} link underline={false} mask={description}>\n            {site}\n          </Text>\n        </DescriptionDiv>\n      </TextDiv>\n    </CardDiv>\n  );\n};\n\n/** Styles */\nconst CardDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 500px;\n  height: 300px;\n  margin-right: 15px;\n  margin-left: 15px;\n  margin-top: 15px;\n  cursor: pointer;\n`;\n\nconst BackgroundDiv = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  background-color: black;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ImageDiv = styled.div<{ mobile: boolean }>`\n  width: ${({ mobile }) => (mobile ? \"150px\" : \"100%\")};\n  height: 300px;\n  object-fit: contain;\n`;\n\nconst ProjectImg = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\nconst TextDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 85%;\n  margin: auto;\n`;\n\nconst TitleDiv = styled.div`\n  margin-top: 10px;\n  margin-bottom: 6px;\n`;\n\nconst DescriptionDiv = styled.div``;\n\n/** Exports */\nexport default Card;\n","import React from \"react\";\nimport \"./App.css\";\nimport { NavBar } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}