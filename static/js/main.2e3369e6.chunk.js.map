{"version":3,"sources":["components/header.tsx","components/view.tsx","views/home.tsx","assets/images/angularMovieDBImg.png","assets/images/reactECommerceStoreImg.png","assets/images/angularGolfScorecardImg.jpeg","assets/images/javaScriptHangManImg.png","assets/pdf/CurtisBrandon_Resume_2021-11-11.pdf","views/resumeTab.tsx","assets/images/facebook.png","assets/images/linkedin.png","views/contact.tsx","assets/images/dark_blue_wall.png","assets/images/dark_yellow_wall.png","assets/images/dark_red_wall.png","components/navBar.tsx","components/text.tsx","components/card.tsx","components/backgroundText.tsx","components/contactCardSection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderStyle","styled","div","text","Header","ViewStyle","BodyStyle","HeaderDiv","View","headerText","center","children","projects","title","description","image","site","mobile","BodyWrapper","ProjectDiv","HomePage","allProjects","map","project","index","pdfjs","GlobalWorkerOptions","workerSrc","version","ResumeDiv","BorderDiv","Resume","screenWidth","window","innerWidth","pdfWidth","Math","min","file","myResume","onLoadSuccess","console","log","externalLinkTarget","pageNumber","width","CardDiv","ContactDiv","AttrDiv","Contact","currentRoute","socialArray","fbImg","liImg","sectionTitle","sectionText","textMask","textLink","imgPath","href","NavBarItem","viewName","onRouteSelect","isSelected","formatRouteName","useCallback","replace","NavBarItemStyle","onClick","PageWrapper","wallBlueImg","wallYellowImg","wallRedImg","NavContainer","NavBarStyle","NavBar","useState","loadSite","setLoadSite","ViewType","Views","setCurrentRoute","viewNames","Object","keys","setSiteState","boolean","getRoutes","currentView","TextRenderer","align","bold","italic","fontSize","color","LinkRenderer","a","underline","Text","link","mask","newTab","target","undefined","BackgroundDiv","ImageDiv","ProjectImg","img","TextDiv","TitleDiv","DescriptionDiv","Card","fontSizeTitle","fontSizeDesc","screen","open","navSite","src","alt","TextContainer","BackgroundTextContainer","isClicked","WelcomeSmallTxt","NameTxt","EnterBtn","button","BtnContainer","BkgdTxt","useRef","EnterSiteFn","current","SectionDiv","ContentDiv","IconImgsContainer","SingleImgContainer","IconImg","ContactCardSection","titleSection","bodySection","getAllImgTxt","getAllImgMasks","getAllImgs","imgTxt","maskTxt","linkTxt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e3369e6.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n/** Header Types */\ntype Props = {\n  /** The type for the prop of the header being passed in. */\n  text: string;\n};\n\n/** Renders text as a header for each view, depending on which is selected and active. */\nconst Header = ({ text }: Props) => (\n  <HeaderStyle text={text}>{text}</HeaderStyle>\n);\n\n/** Header Styles */\nconst HeaderStyle = styled.div<{ text: string }>`\n  width: 100%;\n  height: 2em;\n  position: fixed;\n  font-size: 2em;\n  background: none;\n  box-sizing: border-box;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  color: ${({ text }) =>\n    text === \"My work\"\n      ? `#FFF`\n      : text === \"My resume\"\n      ? `#FFE7AD`\n      : text === \"Lets get in touch\"\n      ? `#FFC9C2`\n      : \"#FFF\"};\n  text-shadow: ${({ text }) =>\n    text === \"My work\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c`\n      : text === \"My resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00`\n      : text === \"Lets get in touch\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20`\n      : \"none\"};\n\n  @media (min-width: 460px) {\n    font-size: 2.5em;\n  }\n\n  @media (min-width: 865px) {\n    font-size: 2.7em;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 3.5em;\n  }\n\n  /** Flicker in animation on site content load. */\n  @keyframes flickerIn {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #e6af2e,\n        0 0 80px #e6af2e, 0 0 90px #e6af2e, 0 0 100px #e6af2e, 0 0 150px #e6af2e;\n    }\n    20%,\n    24%,\n    55% {\n      text-shadow: none;\n    }\n  }\n  /* animation: flickerIn 1s linear 0s 1 forwards; */\n\n  /* Keyframe animation for the slide down effect on page load. */\n  @keyframes slideDown {\n    0% {\n      margin-top: 0px;\n    }\n    100% {\n      opacity: 1;\n      margin-top: 45px;\n      padding: 10px;\n    }\n  }\n  /* animation: slideDown 1s linear 0s 1 forwards; */\n\n  /* Animation for neon light pulsate effect. */\n  @keyframes pulsate {\n    100% {\n      /* Larger blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #e6af2e,\n        0 0 80px #e6af2e, 0 0 90px #e6af2e, 0 0 100px #e6af2e, 0 0 150px #e6af2e;\n    }\n    0% {\n      /* A slightly smaller blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #e6af2e,\n        0 0 73px #e6af2e, 0 0 80px #e6af2e, 0 0 94px #e6af2e, 0 0 140px #e6af2e;\n    }\n  }\n  /* pulsate 0.11s ease-in-out infinite alternate; */\n`;\n\n/** Header Exports */\nexport default Header;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"./\";\n\n/** View Types */\ntype Props = {\n  /** Header displayed at top of page. */\n  headerText?: string;\n  /** Centers content in view. */\n  center?: boolean;\n  /** Typing for the node which holds the children (the body of the page). */\n  children?: ReactNode;\n};\n\n/** Component that wraps and displays the main body of the view, and displays the banner for which view is currently routed to. */\nconst View = ({ headerText, center, children }: Props) => {\n  return (\n    <ViewStyle>\n      <HeaderDiv>{headerText && <Header text={headerText} />}</HeaderDiv>\n      <BodyStyle {...center}>{children}</BodyStyle>\n    </ViewStyle>\n  );\n};\n\n/** View Styles */\nconst ViewStyle = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n`;\n\nconst BodyStyle = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 50px;\n  z-index: 10;\n  overflow: scroll;\n  margin-bottom: 20px;\n\n  @media (min-width: 865px) {\n    margin-top: 75px;\n  }\n`;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n  z-index: 11;\n`;\n\n/** View Exports */\nexport default View;\n","import styled from \"styled-components\";\nimport { View } from \"../components\";\nimport { Card } from \"../components\";\nimport movieDbImg from \"../assets/images/angularMovieDBImg.png\";\nimport ecommerceStoreImg from \"../assets/images/reactECommerceStoreImg.png\";\nimport golfScorecardImg from \"../assets/images/angularGolfScorecardImg.jpeg\";\nimport hangManImg from \"../assets/images/javaScriptHangManImg.png\";\n\n/** Array of objects that holds data to be displayed in the card component. */\nconst projects = [\n  {\n    title: \"Angular MovieDB\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 and The Movie Database API to create a site you can rate and review movies you see!\",\n    image: movieDbImg,\n    site: \"https://teras43.github.io/movieGroupProject/\",\n    mobile: true,\n  },\n  {\n    title: \"React E-Commerce Store\",\n    description:\n      \"Best viewed on mobile! Uses React.js and a mock API to create a site you can browse items and add them to your cart to buy.\",\n    image: ecommerceStoreImg,\n    site: \"https://teras43.github.io/eCommerceStore/\",\n    mobile: true,\n  },\n  {\n    title: \"Angular Golf Scorecard\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 to select a golf course, add players to your golf game and keep track of all the scores for each person.\",\n    image: golfScorecardImg,\n    site: \"https://teras43.github.io/golf-scorecard-angular/\",\n    mobile: true,\n  },\n  {\n    title: \"JavaScript Hangman\",\n    description:\n      \"Best viewed on desktop! A simple JavaScript game that lets you play a game of hangman from a predetermined set of words.\",\n    image: hangManImg,\n    site: \"https://teras43.github.io/Hang-Man/\",\n    mobile: false,\n  },\n];\n\n/** The landing page view of the app. */\nconst HomePage = () => {\n  /** Variable that holds the project cards mapped to each project in the projects array. */\n  const allProjects = projects.map((project, index) => {\n    return (\n      <Card\n        key={index}\n        image={project.image}\n        title={project.title}\n        description={project.description}\n        site={project.site}\n        mobile={project.mobile}\n      ></Card>\n    );\n  });\n\n  return (\n    <View headerText=\"My work\">\n      <BodyWrapper>\n        <ProjectDiv>{allProjects}</ProjectDiv>\n      </BodyWrapper>\n    </View>\n  );\n};\n\n/** Home View Styles */\nconst BodyWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst ProjectDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-bottom: 100px;\n  height: 100%;\n  width: 100%;\n  max-width: 1285px;\n  margin: auto;\n  opacity: 0;\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: fadeIn 1s linear 0.2s 1 forwards;\n\n  @media (min-width: 865px) {\n  }\n`;\n\n/** Home View Exports */\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/angularMovieDBImg.c8bfe0f3.png\";","export default __webpack_public_path__ + \"static/media/reactECommerceStoreImg.9f7999c6.png\";","export default __webpack_public_path__ + \"static/media/angularGolfScorecardImg.58424e1e.jpeg\";","export default __webpack_public_path__ + \"static/media/javaScriptHangManImg.c2e8fdc5.png\";","export default __webpack_public_path__ + \"static/media/CurtisBrandon_Resume_2021-11-11.c14d5866.pdf\";","import React from \"react\";\nimport { Document, Page, pdfjs } from \"react-pdf\";\nimport { View } from \"../components\";\nimport myResume from \"../assets/pdf/CurtisBrandon_Resume_2021-11-11.pdf\";\nimport styled from \"styled-components\";\n\n/** Global worker for the PDF viewer used for the Resume. */\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n/** The view component for the resume. */\nconst Resume = () => {\n  /** Width of the current viewport. */\n  const screenWidth = window.innerWidth;\n  /** Width of the PDF relative to the current viewport. */\n  const pdfWidth = Math.min(screenWidth - screenWidth * 0.25, 850);\n\n  return (\n    <View headerText=\"My resume\">\n      <ResumeDiv>\n        <BorderDiv>\n          <Document\n            file={myResume}\n            onLoadSuccess={console.log}\n            externalLinkTarget=\"_blank\"\n          >\n            <Page pageNumber={1} width={pdfWidth} />\n          </Document>\n          <Document\n            file={myResume}\n            onLoadSuccess={console.log}\n            externalLinkTarget=\"_blank\"\n          >\n            <Page pageNumber={2} width={pdfWidth} />\n          </Document>\n        </BorderDiv>\n      </ResumeDiv>\n    </View>\n  );\n};\n\n/** Resume View Styles */\nconst ResumeDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 50;\n  margin: auto;\n  box-sizing: border-box;\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst BorderDiv = styled.div`\n  width: 100%;\n  margin-top: 25px;\n  margin-bottom: 25px;\n`;\n\n/** Resume View Exports */\nexport default Resume;\n","export default __webpack_public_path__ + \"static/media/facebook.795fce8e.png\";","export default __webpack_public_path__ + \"static/media/linkedin.e65fd24a.png\";","import styled from \"styled-components\";\nimport { View } from \"../components\";\nimport { ContactCardSection } from \"../components\";\nimport fbImg from \"../assets/images/facebook.png\";\nimport liImg from \"../assets/images/linkedin.png\";\n\ntype Props = {\n  currentRoute: string;\n};\n\n/** The view component for the Contact page. */\nconst Contact = ({ currentRoute }: Props) => {\n  let socialArray = [fbImg, liImg];\n  let socialLinkArray = [\n    \"https://www.facebook.com/brandcurtis/\",\n    \"https://www.linkedin.com/in/brandcurtis/\",\n  ];\n  let socialMask = [\"Facebook\", \"LinkedIn\"];\n\n  return (\n    <View headerText=\"Lets get in touch\">\n      <BodyWrapper>\n        <CardDiv>\n          <BorderDiv>\n            <ContactDiv>\n              <ContactCardSection\n                sectionTitle={\"You can email me:\"}\n                sectionText={\"Brandcurtis43@gmail.com\"}\n                textMask={\"Here's the link to it!\"}\n                textLink={\"email\"}\n              />\n              <ContactCardSection\n                sectionTitle={\"Some socials:\"}\n                imgPath={socialArray}\n                textLink={true}\n                sectionText={socialLinkArray}\n                textMask={socialMask}\n              />\n              <ContactCardSection\n                sectionTitle={\"Github if you'd like:\"}\n                sectionText={\"https://github.com/Teras43\"}\n                textMask={\"Link to Github\"}\n                textLink={true}\n              />\n            </ContactDiv>\n          </BorderDiv>\n        </CardDiv>\n        <AttrDiv>\n          <div>\n            Facebook Icon made by{\" \"}\n            <a\n              href=\"https://www.flaticon.com/authors/ruslan-babkin\"\n              title=\"Ruslan Babkin\"\n            >\n              Ruslan Babkin\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div>\n          <div>\n            LinkedIn Icon made by{\" \"}\n            <a href=\"https://www.freepik.com\" title=\"Freepik\">\n              Freepik\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div>\n        </AttrDiv>\n      </BodyWrapper>\n    </View>\n  );\n};\n\n/** Contact View Styles */\nconst BodyWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst CardDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  max-width: 400px;\n  height: 25em;\n  margin-right: 15px;\n  margin-left: 15px;\n  margin-top: 25px;\n  margin-bottom: 50px;\n  border: 1px solid #ffffff9d;\n  border-radius: 10px;\n  box-shadow: 0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;\n  background-color: #141414;\n  align-items: center;\n\n  @media (min-width: 700px) {\n    max-width: 800px;\n    height: 28em;\n  }\n\n  @media (min-width: 1100px) {\n    max-width: 1000px;\n    height: 30em;\n  }\n\n  @media (min-width: 1300px) {\n    max-width: 1200px;\n    height: 35em;\n  }\n`;\n\nconst BorderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 95%;\n  border: 1px solid #a3a3a3;\n  border-radius: 5px;\n  margin: 8px;\n`;\n\nconst ContactDiv = styled.div`\n  height: 90%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  padding-top: 20px;\n\n  @media (min-width: 1100px) {\n    flex-direction: row;\n  }\n\n  @media (min-width: 1300px) {\n  }\n`;\n\nconst AttrDiv = styled.div`\n  height: 8em;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  justify-content: flex-end;\n\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\n/** Contact View Exports */\nexport default Contact;\n","export default __webpack_public_path__ + \"static/media/dark_blue_wall.f0369174.png\";","export default __webpack_public_path__ + \"static/media/dark_yellow_wall.73769f0d.png\";","export default __webpack_public_path__ + \"static/media/dark_red_wall.87ea9a37.png\";","import { ReactNode, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Views from \"../views\";\nimport wallBlueImg from \"../../src/assets/images/dark_blue_wall.png\";\nimport wallYellowImg from \"../../src/assets/images/dark_yellow_wall.png\";\nimport wallRedImg from \"../../src/assets/images/dark_red_wall.png\";\nimport { BkgdTxt } from \"./\";\n\n/** Navbar Types */\ntype NavBarItemProps = {\n  /** Name of a view as a string. */\n  viewName: string;\n  /** Function that runs to set the current state of the view. */\n  onRouteSelect: (viewName: string) => void;\n  /** The boolean passed in telling the component whether or not the current route displayed is the 'selected' route / view, or currently active route / view. */\n  isSelected: boolean;\n};\n\ntype GenericProps = {\n  currentRoute?: string;\n};\n\n/** Navbar - Controls displaying of the views and navigation for each view. */\nconst NavBar = () => {\n  /** State that tells the component whether the Enter Site button has been clicked and the page needs to fully render. */\n  const [loadSite, setLoadSite] = useState<boolean>(false);\n  /** The variable that holds the current view to display as a header, pulled from the Views folder 'as Record<string, () => ReactNode>'.  */\n  const ViewType = Views as Record<\n    string,\n    ({ currentRoute }: GenericProps) => ReactNode\n  >;\n  /** The state for the routing used in the webapp. Initialized at \"Home\" route. */\n  const [currentRoute, setCurrentRoute] = useState<string>(\"Webapps\");\n  /** Variable that holds the object with names of each view to set up a route to. */\n  const viewNames = Object.keys(Views);\n\n  /** The function that checks the state to see if the button has been clicked to render the rest of the page. */\n  const setSiteState = useCallback((boolean) => {\n    setLoadSite(boolean);\n    return;\n  }, []);\n\n  /** The function that accesses the Views object (imported) and maps item styling and properties on each view, to display in the Navbar in the view. */\n  const getRoutes = useCallback(() => {\n    /** The map on the object with each view name. */\n    return viewNames.map((viewName, index) => (\n      <NavBarItem\n        key={index}\n        onRouteSelect={setCurrentRoute}\n        viewName={viewName}\n        isSelected={currentRoute === viewName}\n      ></NavBarItem>\n    ));\n  }, [currentRoute, viewNames]);\n\n  return (\n    <PageWrapper viewName={currentRoute}>\n      <NavContainer>\n        {loadSite && <NavBarStyle>{getRoutes()}</NavBarStyle>}\n      </NavContainer>\n      {loadSite && ViewType[currentRoute]?.({ currentRoute })}\n      <BkgdTxt\n        loadSite={loadSite}\n        setSiteState={setSiteState}\n        currentView={currentRoute}\n      />\n    </PageWrapper>\n  );\n};\n\n/** Navbar Item component that takes the view(route) names and changes the displayed name to be a capitalized version of the view name. It applies styling and attributes for selection and routing as well. */\nconst NavBarItem = ({\n  viewName,\n  onRouteSelect,\n  isSelected,\n}: NavBarItemProps) => {\n  const formatRouteName = useCallback(\n    () => viewName.replace(/([A-Z]+)/g, \" $1\"),\n    [viewName]\n  );\n\n  return (\n    <NavBarItemStyle\n      isSelected={isSelected}\n      viewName={viewName}\n      onClick={() => onRouteSelect(viewName)}\n    >\n      {formatRouteName()}\n    </NavBarItemStyle>\n  );\n};\n\n/** Accessability settings for animation. */\n// @media screen and (prefers-reduced-motion) {\n//   *element w/ animation here* {\n//     animation: none;\n//   }\n// }\n\n/** Navbar Styles */\nconst PageWrapper = styled.div<{ viewName: string }>`\n  display: flex;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  background-image: ${({ viewName }) =>\n    viewName === \"Webapps\"\n      ? `url(${wallBlueImg})`\n      : viewName === \"Resume\"\n      ? `url(${wallYellowImg})`\n      : viewName === \"Contact\"\n      ? `url(${wallRedImg})`\n      : `url(${wallBlueImg})`};\n  background-color: #010a01;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 100% 100%;\n  text-align: center;\n  font-family: \"Indie Flower\", cursive;\n`;\n\nconst NavContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst NavBarStyle = styled.div`\n  width: 100%;\n  max-width: 1275px;\n  height: 70px;\n  position: fixed;\n  font-size: 16px;\n  background: none;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  text-decoration: none;\n  z-index: 20;\n\n  @media (min-width: 1275px) {\n    margin: auto;\n  }\n`;\n\nconst NavBarItemStyle = styled.div<{ isSelected: boolean; viewName: string }>`\n  margin-right: 4px;\n  padding-left: 18px;\n  font-size: 20px;\n  user-select: none;\n  cursor: pointer;\n  opacity: ${({ isSelected }) => (isSelected ? \"1\" : \"0.5\")};\n  color: ${({ isSelected, viewName }) =>\n    isSelected && viewName === \"Webapps\"\n      ? \"#FFF\"\n      : isSelected && viewName === \"Resume\"\n      ? \"#FFE7AD\"\n      : isSelected && viewName === \"Contact\"\n      ? \"#FFC9C2\"\n      : \"#FFF\"};\n  text-shadow: ${({ isSelected, viewName }) =>\n    isSelected && viewName === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 100px #1b356c`\n      : isSelected && viewName === \"Resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00`\n      : isSelected && viewName === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20`\n      : \"none\"};\n  padding-right: 18px;\n\n  @media (min-width: 460px) {\n    font-size: 28px;\n  }\n\n  @media (min-width: 865px) {\n    font-size: 32px;\n  }\n\n  @media (min-width: 1200px) {\n    font-size: 42px;\n  }\n\n  /** Flicker in animation on site content load for the header and currently selected NavBar path. */\n  ${({ isSelected, viewName }) =>\n    isSelected && viewName === \"Webapps\"\n      ? `@keyframes flickerIn {\n      0%,\n      18%,\n      22%,\n      25%,\n      53%,\n      57%,\n      100% {\n        text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n          0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n      }\n      20%,\n      24%,\n      55% {\n        text-shadow: none;\n      }\n    }\n    animation: flickerIn 1s linear 1.2s 1 none;\n    `\n      : isSelected && viewName === \"Resume\"\n      ? `@keyframes flickerIn {\n      0%,\n      18%,\n      22%,\n      25%,\n      53%,\n      57%,\n      100% {\n        text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #FBAF00,\n          0 0 80px #FBAF00, 0 0 90px #FBAF00, 0 0 100px #FBAF00, 0 0 150px #FBAF00;\n      }\n      20%,\n      24%,\n      55% {\n        text-shadow: none;\n      }\n    }\n    animation: flickerIn 1s linear 1.2s 1 none;\n    `\n      : isSelected && viewName === \"Contact\"\n      ? `@keyframes flickerIn {\n      0%,\n      18%,\n      22%,\n      25%,\n      53%,\n      57%,\n      100% {\n        text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #FF3A20,\n          0 0 80px #FF3A20, 0 0 90px #FF3A20, 0 0 100px #FF3A20, 0 0 150px #FF3A20;\n      }\n      20%,\n      24%,\n      55% {\n        text-shadow: none;\n      }\n    }\n    animation: flickerIn 1s linear 1.2s 1 none;\n    `\n      : \"none\"} /* Pulsating animation for each item in the navbar. */ @keyframes pulsate {\n    100% {\n      /* Larger blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #e6af2e,\n        0 0 80px #e6af2e, 0 0 90px #e6af2e, 0 0 100px #e6af2e, 0 0 150px #e6af2e;\n    }\n    0% {\n      /* A slightly smaller blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #e6af2e,\n        0 0 73px #e6af2e, 0 0 80px #e6af2e, 0 0 94px #e6af2e, 0 0 140px #e6af2e;\n    }\n  }\n  /* pulsate 0.11s ease-in-out infinite alternate; */\n\n  /* Commented out CSS here is for a previous animation for the navbar current route highlighting that I was using. */\n  /* border-bottom: ${({ isSelected }) =>\n    isSelected ? \"1px solid black\" : \"none\"};\n  margin-bottom: ${({ isSelected }) => (isSelected ? \"8px\" : \"0\")}; */\n  /* @keyframes Bounce {\n    50% {\n      margin-bottom: 15px;\n    }\n    75% {\n      margin-top: 10px;\n    }\n  }\n  animation: Bounce 1s infinite;\n  animation-play-state: paused;\n  transform: rotate(0deg);\n  @keyframes Reset {\n    100% {\n      transform: rotate(0deg);\n    }\n  }\n  &:not(:hover) {\n    animation: Reset 0.5s 1;\n  }\n  &:hover {\n    animation-play-state: running;\n  } */\n`;\n\n/** Navbar Exports */\nexport default NavBar;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\n/** Text Component Types */\n\ntype Props = {\n  /** Whether to justify the text to the center, left, right, top or bottom. Default: left */\n  align?: \"center\" | \"left\" | \"right\";\n  /** Bolds the text. Default: false */\n  bold?: boolean;\n  /** Sets text to be italic. Default: false */\n  italic?: boolean;\n  /** Colors the text. Default: black */\n  color?: string;\n  /** Sets the font size in pixels. Default: 14 */\n  fontSize?: number;\n  /** Flags the text as a link (of a certain type if chosen, will use a generic if not),\n   * and will be rendered as an <a> tag instead. Default: false */\n  link?: boolean | \"email\" | \"telephone\" | \"textMessage\";\n  /** Tells the component whether to display an underline on the link (if set). Default: true */\n  underline?: boolean;\n  /** Masks a link with different text. Ignored if the text is not a link. */\n  mask?: string;\n  /** Indicates whether to open a link in a new tab or not. Default: true */\n  newTab?: boolean;\n  /** Typing for the node which holds the children (if any). */\n  children?: ReactNode;\n};\n\n/** A versatile component for rendering text using different props to achieve different effects. Effects are displayed in the types above. */\nconst Text = ({\n  align = \"left\",\n  bold = false,\n  italic = false,\n  color = \"black\",\n  fontSize = 14,\n  link = false,\n  underline = true,\n  mask,\n  newTab = true,\n  children,\n}: Props) =>\n  !link ? (\n    <TextRenderer\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {children}\n    </TextRenderer>\n  ) : (\n    <LinkRenderer\n      href={\n        link === \"email\"\n          ? `mailto:${children as string}`\n          : link === \"telephone\"\n          ? `tel:${children as string}`\n          : link === \"textMessage\"\n          ? `sms:${children as string}`\n          : (children as string)\n      }\n      target={newTab ? \"_blank\" : undefined}\n      underline={underline}\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {mask ? mask : children}\n    </LinkRenderer>\n  );\n\n/** Text Component Styles */\n\nconst TextRenderer = styled.div<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\nconst LinkRenderer = styled.a<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-decoration: ${({ underline }) => (underline ? \"underline\" : \"none\")};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\n\n/** Text Component Exports */\n\nexport default Text;\n","import styled from \"styled-components\";\nimport { Text } from \"../components\";\n\n/** Types */\ntype Props = {\n  /** Title of the project in the card. */\n  title: string;\n  /** Small description of project in card. */\n  description: string;\n  /** Thumbnail image for project in card. */\n  image: string;\n  /** Website the project is hosted at. */\n  site: string;\n  /** Will size thumbnail image to mobile or desktop size. */\n  mobile?: boolean;\n};\n\n/** Component that decides the data / styling for each project. Each card representing a 'section'. */\nconst Card = ({ title, description, image, site, mobile = true }: Props) => {\n  /** Variable that holds the current font sizes for the title and description. */\n  let fontSizeTitle = 18;\n  let fontSizeDesc = 16;\n  /** If statement that checks the screen width, then passes in the variable for the text size for the card project text. */\n  // eslint-disable-next-line no-restricted-globals\n  if (screen.width >= 865) {\n    fontSizeTitle = 40;\n    fontSizeDesc = 34;\n  } else {\n    fontSizeTitle = 18;\n    fontSizeDesc = 16;\n  }\n  /** Function that simply opens the website of the project clicked. */\n  const navSite = (site: any) => {\n    window.open(site);\n  };\n\n  return (\n    <CardDiv>\n      <BorderDiv>\n        <BackgroundDiv onClick={() => navSite(site)}>\n          <ImageDiv mobile={mobile}>\n            <ProjectImg\n              mobile={mobile}\n              src={image}\n              alt=\"Thumbnail for Project\"\n            ></ProjectImg>\n          </ImageDiv>\n        </BackgroundDiv>\n        <TextDiv>\n          <TitleDiv>\n            <Text\n              fontSize={fontSizeTitle}\n              bold\n              link\n              mask={title}\n              color={\"white\"}\n              align={\"center\"}\n            >\n              {site}\n            </Text>\n          </TitleDiv>\n          <DescriptionDiv>\n            <Text\n              fontSize={fontSizeDesc}\n              link\n              underline={false}\n              mask={description}\n              color={\"white\"}\n              align={\"center\"}\n            >\n              {site}\n            </Text>\n          </DescriptionDiv>\n        </TextDiv>\n      </BorderDiv>\n    </CardDiv>\n  );\n};\n\n/** Card Component Styles */\nconst CardDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 70%;\n  max-width: 400px;\n  margin-right: 15px;\n  margin-left: 15px;\n  margin-top: 25px;\n  margin-bottom: 50px;\n  cursor: pointer;\n  border: 1px solid #ffffff9d;\n  border-radius: 10px;\n  box-shadow: 0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;\n  background-color: #141414;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: 865px) {\n    max-width: 1300px;\n  }\n`;\n\nconst BorderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 98%;\n  width: 98%;\n  border: 1px solid #a3a3a3;\n  border-radius: 5px;\n  margin: 8px;\n\n  @media (min-width: 865px) {\n    flex-direction: row;\n  }\n`;\n\nconst BackgroundDiv = styled.div`\n  width: 90%;\n  height: 175px;\n  margin-top: 15px;\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #c2c2c2;\n  border-radius: 10px;\n\n  @media (min-width: 410px) {\n    height: 225px;\n  }\n\n  @media (min-width: 865px) {\n    width: 50%;\n    height: 80%;\n    margin-left: 10px;\n    margin-bottom: 15px;\n  }\n`;\n\nconst ImageDiv = styled.div<{ mobile: boolean }>`\n  width: ${({ mobile }) => (mobile ? \"33%\" : \"100%\")};\n  height: 175px;\n  object-fit: contain;\n  @media (min-width: 410px) {\n    height: 225px;\n  }\n\n  @media (min-width: 865px) {\n    height: 100%;\n    width: ${({ mobile }) => (mobile ? \"50%\" : \"100%\")};\n  }\n\n  @media (min-width: 1200px) {\n  }\n`;\n\nconst ProjectImg = styled.img<{ mobile: boolean }>`\n  height: 100%;\n  width: 100%;\n\n  @media (min-width: 865px) {\n    border-radius: ${({ mobile }) => (!mobile ? \"10px\" : \"0\")};\n  }\n`;\n\nconst TextDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 85%;\n  margin: auto;\n  margin-top: 0;\n  margin-bottom: 10px;\n\n  @media (min-width: 865px) {\n    width: 45%;\n  }\n`;\n\nconst TitleDiv = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 6px;\n`;\n\nconst DescriptionDiv = styled.div``;\n\n/** Card Component Exports */\nexport default Card;\n","import { useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\n\n/** Prop typing for the Background Text Component. */\ntype BkgdProps = {\n  /** Prop that dictates whether to load the rest of the web page after the Enter Site button has been clicked. */\n  loadSite: any;\n  /** The function that will set the state of the site to based off the previous loadSite prop. */\n  setSiteState: any;\n  /** The current view displayed on the app. */\n  currentView: any;\n};\n\n/** Component that displays the neon text on the background image of the site. */\nconst BkgdTxt = ({ setSiteState, currentView }: BkgdProps) => {\n  let isClicked = useRef(false);\n\n  const EnterSiteFn = useCallback(() => {\n    setSiteState(true);\n    isClicked.current = true;\n  }, [setSiteState]);\n\n  return (\n    <TextContainer>\n      <BackgroundTextContainer\n        currentView={currentView}\n        isClicked={isClicked.current}\n      >\n        <WelcomeSmallTxt\n          currentView={currentView}\n          isClicked={isClicked.current}\n        >\n          My Name Is\n        </WelcomeSmallTxt>\n        <NameTxt currentView={currentView} isClicked={isClicked.current}>\n          Brandon Curtis\n        </NameTxt>\n      </BackgroundTextContainer>\n      <BtnContainer>\n        <EnterBtn\n          currentView={currentView}\n          isClicked={isClicked.current}\n          onClick={() => EnterSiteFn()}\n        >\n          Enter\n        </EnterBtn>\n      </BtnContainer>\n    </TextContainer>\n  );\n};\n\n/** Background Text Component Styles */\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 400;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 2s linear;\n`;\n\nconst BackgroundTextContainer = styled.div<{\n  isClicked: boolean;\n  currentView: any;\n}>`\n  border: ${({ isClicked }) =>\n    isClicked ? `0.3rem solid rgba(255, 255, 255, 0.3)` : `0.3rem solid #fff`};\n  border-radius: 2rem;\n  padding: 0.7em;\n  box-shadow: ${({ currentView }) =>\n    currentView === \"Webapps\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;`\n      : currentView === \"Resume\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #FBAF00,\n    0 0 0.8rem #FBAF00, 0 0 2.8rem #FBAF00, inset 0 0 1.3rem #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #FF3A20,\n    0 0 0.8rem #FF3A20, 0 0 2.8rem #FF3A20, inset 0 0 1.3rem #FF3A20;`\n      : `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;`};\n  /* The flicker keyframe animation is a flickering color, almost like a lightbulb going out for a split second. */\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n    20%,\n    24%,\n    55% {\n      text-shadow: none;\n    }\n  }\n  /* animation: flicker 1.5s infinite alternate; */\n`;\n\nconst WelcomeSmallTxt = styled.div<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0.3 : 1)};\n  font-family: \"Dancing Script\", cursive;\n  font-size: 1.5em;\n  /* The color and text-shadow give the words their neon glow property. */\n  color: #fff;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n  /* The pulsate keyframe animation is a more contant color, slowly pulsating. Smoother. */\n  @keyframes pulsate {\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n\n    0% {\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #1b356c,\n        0 0 73px #1b356c, 0 0 80px #1b356c, 0 0 94px #1b356c, 0 0 140px #1b356c;\n    }\n  }\n  /* animation: pulsate 0.11s ease-in-out infinite alternate; */\n\n  @media (min-width: 700px) {\n    font-size: 2.5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 3.5em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 4em;\n  }\n\n  @media (min-width: 1700px) {\n    font-size: 4.5em;\n  }\n\n  @media (min-width: 1890px) {\n    font-size: 5.5em;\n  }\n\n  /* The flicker keyframe animation is a flickering color, almost like a lightbulb going out for a split second. */\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n    20%,\n    24%,\n    55% {\n      text-shadow: none;\n    }\n  }\n  /* This animation property is what decided which of the two animations to play for the neon text. */\n  /* animation: flicker 1.5s infinite alternate; */\n\n  margin-right: 35px;\n`;\n\nconst NameTxt = styled.div<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0.65 : 1)};\n  font-family: \"Dancing Script\", cursive;\n  font-size: 4em;\n  font-weight: 700;\n  /* The color and text-shadow give the words their neon glow property. */\n  color: #fff;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n\n  @media (min-width: 700px) {\n    font-size: 5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 6em;\n  }\n\n  @media (min-width: 1050px) {\n    font-size: 7em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 9em;\n  }\n\n  @media (min-width: 1700px) {\n    font-size: 10em;\n  }\n\n  @media (min-width: 1890px) {\n    font-size: 11em;\n  }\n\n  @media (min-width: 2080px) {\n    font-size: 12em;\n  }\n\n  @media (min-width: 2265px) {\n    font-size: 13em;\n  }\n\n  @media (min-width: 2445px) {\n    font-size: 14em;\n  }\n\n  @media (min-width: 2630px) {\n    font-size: 15em;\n  }\n\n  /* The pulsate keyframe animation is a more contant color, slowly pulsating. Smoother. */\n  @keyframes pulsate {\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n\n    0% {\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #1b356c,\n        0 0 73px #1b356c, 0 0 80px #1b356c, 0 0 94px #1b356c, 0 0 140px #1b356c;\n    }\n  }\n  /* The flicker keyframe animation is a flickering color, almost like a lightbulb going out for a split second. */\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n    8%,\n    20%,\n    24%,\n    64%,\n    78% {\n      text-shadow: none;\n    }\n  }\n  /* This animation property is what decided which of the two animations to play for the neon text. */\n  /* animation: pulsate 0.11s ease-in-out infinite alternate; */\n  animation: ${({ isClicked }) =>\n    !isClicked ? `flicker 1.5s infinite 2.2s alternate;` : `none`};\n`;\n\nconst EnterBtn = styled.button<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0 : 1)};\n  font-family: \"Bebas Neue\", cursive;\n  width: 200px;\n  height: 45px;\n  background: none;\n  border: none;\n  font-size: 2.5em;\n  transform: rotate(-10deg);\n  /* The color and text-shadow give the words their neon glow property. */\n  color: #2a2727;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n\n  @media (min-width: 700px) {\n    font-size: 3.5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 4.5em;\n  }\n\n  @media (min-width: 1050px) {\n    font-size: 5.5em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 5.5em;\n  }\n\n  /** The switch keyframe animation quickly changes the color of the enter button from an \"off\" to an \"on\" color. */\n  @keyframes switch {\n    0% {\n      color: #2a2727;\n    }\n    100% {\n      color: #fff;\n    }\n  }\n  animation: switch 0.1s 2.2s forwards;\n\n  /* The pulsate keyframe animation is a more contant color, slowly pulsating. Smoother. */\n  @keyframes pulsate {\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n\n    0% {\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #1b356c,\n        0 0 73px #1b356c, 0 0 80px #1b356c, 0 0 94px #1b356c, 0 0 140px #1b356c;\n    }\n  }\n  /* animation: pulsate 0.11s ease-in-out infinite alternate; */\n\n  /* The flicker keyframe animation is a flickering color, almost like a lightbulb going out for a split second. */\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n    20%,\n    24%,\n    55% {\n      text-shadow: none;\n    }\n  }\n  /* animation: flicker 1.5s infinite alternate; */\n`;\n\nconst BtnContainer = styled.div`\n  margin-top: 50px;\n`;\n\n/** Background Text Component Exports */\nexport default BkgdTxt;\n","import { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \".\";\n\n/** Typing on the props for ContactSection Component. */\ntype ContactProps = {\n  /** Text to display for the title of the section. */\n  sectionTitle: string;\n  /** Text to display within the section component. */\n  sectionText: any;\n  /** Prop to determine whether to load the image or text variant of the section component. */\n  imgPath?: any;\n  /** Mask for text if applicable. */\n  textMask?: any;\n  /** Flags the text as a link (of a certain type if chosen, will use a generic if not),\n   * and will be rendered as an <a> tag instead. Default: false */\n  textLink?: boolean | \"email\" | \"telephone\" | \"textMessage\";\n};\n\n/** Component for the Contact view that displays each section of the contact card body. */\nconst ContactCardSection = ({\n  imgPath = undefined,\n  sectionTitle,\n  sectionText,\n  textMask,\n  textLink = false,\n}: ContactProps) => {\n  let titleSection = 26;\n  let bodySection = 19;\n\n  // eslint-disable-next-line no-restricted-globals\n  if (screen.width >= 700) {\n    titleSection = 42;\n    bodySection = 28;\n  } else {\n    titleSection = 26;\n    bodySection = 19;\n  }\n\n  const getAllImgTxt = useCallback(() => {\n    return sectionText.map((text: string) => {\n      return text;\n    });\n  }, [sectionText]);\n\n  const getAllImgMasks = useCallback(() => {\n    return textMask.map((text: string) => {\n      return text;\n    });\n  }, [textMask]);\n\n  const getAllImgs = useCallback(() => {\n    let imgTxt = getAllImgTxt();\n    let maskTxt = getAllImgMasks();\n    return imgTxt.map((linkTxt: string, index: any) => {\n      return (\n        <IconImgsContainer key={index + 1}>\n          <SingleImgContainer>\n            <IconImg\n              src={imgPath[index]}\n              alt=\"Social Media Icon\"\n              onClick={() => {\n                window.open(`${linkTxt}`, \"_blank\");\n              }}\n            ></IconImg>\n          </SingleImgContainer>\n          <Text\n            fontSize={bodySection}\n            italic\n            color={\"white\"}\n            mask={maskTxt[index]}\n            link={textLink}\n          >\n            {linkTxt}\n          </Text>\n        </IconImgsContainer>\n      );\n    });\n  }, [bodySection, getAllImgMasks, getAllImgTxt, imgPath, textLink]);\n\n  return imgPath ? (\n    <SectionDiv imgPath={imgPath}>\n      <TitleDiv>\n        <Text fontSize={titleSection} italic color={\"white\"}>\n          {sectionTitle}\n        </Text>\n      </TitleDiv>\n      <ContentDiv>{getAllImgs()}</ContentDiv>\n    </SectionDiv>\n  ) : (\n    <SectionDiv imgPath={imgPath}>\n      <TitleDiv>\n        <Text fontSize={titleSection} italic color={\"white\"}>\n          {sectionTitle}\n        </Text>\n      </TitleDiv>\n      <ContentDiv>\n        <Text\n          fontSize={bodySection}\n          italic\n          color={\"white\"}\n          mask={textMask}\n          link={textLink}\n        >\n          {sectionText}\n        </Text>\n      </ContentDiv>\n    </SectionDiv>\n  );\n};\n\n/** Contact Section Styles */\nconst SectionDiv = styled.div<{ imgPath: any }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  ${({ imgPath }) =>\n    !imgPath\n      ? `@media (min-width: 1100px) {\n          margin-bottom: 200px;\n        }`\n      : `@media (min-width: 1100px) {\n          margin-top: 200px;\n        }`}\n\n  ${({ imgPath }) =>\n    !imgPath\n      ? `@media (min-width: 1300px) {\n          margin-bottom: 0;\n        }`\n      : `@media (min-width: 1300px) {\n          margin-top: 0;\n        }`}\n`;\n\nconst TitleDiv = styled.div``;\n\nconst ContentDiv = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IconImgsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 10px;\n  margin-left: 10px;\n`;\n\nconst SingleImgContainer = styled.div`\n  height: 30px;\n  width: 30px;\n`;\n\nconst IconImg = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\n/** Contact Section Exports */\nexport default ContactCardSection;\n","import React from \"react\";\nimport \"./App.css\";\nimport { NavBar } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}