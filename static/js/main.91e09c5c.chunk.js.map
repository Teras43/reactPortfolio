{"version":3,"sources":["components/header.tsx","components/view.tsx","assets/images/angularMovieDBImg.png","assets/images/reactECommerceStoreImg.png","assets/images/angularGolfScorecardImg.jpeg","views/home.tsx","assets/images/md-automotive-repair.jpeg","views/games.tsx","assets/images/wordle_thumbnail.png","assets/images/red-swirls.jpeg","assets/images/javaScriptHangManImg.png","assets/images/linkedin.png","views/contact.tsx","assets/images/dark_blue_wall.png","assets/images/dark_yellow_wall.png","assets/images/dark_red_wall.png","components/navBar.tsx","components/text.tsx","components/card.tsx","components/backgroundText.tsx","components/contactCardSection.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderStyle","styled","div","text","Header","ViewStyle","BodyStyle","HeaderDiv","View","headerText","children","projects","title","description","image","site","mobile","movieDbImg","ecommerceStoreImg","golfScorecardImg","BodyWrapper","ProjectDiv","HomePage","allProjects","map","project","index","gameProjects","Games","gameProjectCards","CardDiv","BorderDiv","ContactDiv","AttrDiv","Contact","currentRoute","socialArray","liImg","sectionTitle","sectionText","textMask","textLink","imgPath","href","NavBarItem","viewName","onRouteSelect","isSelected","formatRouteName","useCallback","replace","NavBarListItemStyle","NavBarItemStyle","onClick","PageWrapper","wallBlueImg","wallYellowImg","wallRedImg","NavContainer","NavBarStyle","NavBar","useState","loadSite","setLoadSite","ViewType","Views","setCurrentRoute","viewNames","Object","keys","setSiteState","boolean","getRoutes","currentView","TextRenderer","align","bold","italic","fontSize","color","LinkRenderer","a","underline","Text","link","mask","newTab","target","undefined","BackgroundDiv","ImageDiv","ProjectImg","img","TextDiv","TitleDiv","DescriptionDiv","BtnDiv","Card","fontSizeTitle","fontSizeDesc","screen","width","window","open","navSite","src","alt","rel","id","TextContainer","BackgroundTextContainer","isClicked","WelcomeSmallTxt","NameTxt","EnterBtn","button","BtnContainer","BkgdTxt","useRef","EnterSiteFn","current","SectionDiv","ContentDiv","IconImgsContainer","SingleImgContainer","IconImg","ContactCardSection","titleSection","bodySection","getAllImgTxt","getAllImgMasks","getAllImgs","imgTxt","maskTxt","linkTxt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91e09c5c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n/** Header Types */\ntype Props = {\n  /** The type for the prop of the header being passed in. */\n  text: string;\n};\n\n/** Renders text as a header for each view, depending on which is selected and active. */\nconst Header = ({ text }: Props) => (\n  <HeaderStyle text={text}>{text}</HeaderStyle>\n);\n\n/** Header Styles */\nconst HeaderStyle = styled.div<{ text: string }>`\n  width: 100%;\n  height: 2em;\n  overflow: hidden;\n  font-size: 2em;\n  background: none;\n  box-sizing: border-box;\n  display: flex;\n  text-align: center;\n  justify-content: center;\n  align-items: center;\n  z-index: 10;\n  color: ${({ text }) =>\n    text === \"My games\"\n      ? `#FFF`\n      : text === \"My work\"\n      ? `#FFE7AD`\n      : text === \"Lets get in touch\"\n      ? `#FFC9C2`\n      : \"#FFF\"};\n  text-shadow: ${({ text }) =>\n    text === \"My games\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c`\n      : text === \"My work\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00`\n      : text === \"Lets get in touch\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20`\n      : \"none\"};\n\n  @media (min-width: 460px) {\n    font-size: 2.5em;\n  }\n\n  @media (min-width: 865px) {\n    font-size: 2.7em;\n  }\n\n  @media (min-width: 1201px) {\n    font-size: 3.5em;\n  }\n\n  @media screen and (max-width: 1200px) {\n    margin-top: 100px;\n  }\n\n  /** Flicker in animation on site content load. */\n  @keyframes flickerIn {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #e6af2e,\n        0 0 80px #e6af2e, 0 0 90px #e6af2e, 0 0 100px #e6af2e, 0 0 150px #e6af2e;\n    }\n    20%,\n    24%,\n    55% {\n      text-shadow: none;\n    }\n  }\n  /* animation: flickerIn 1s linear 0s 1 forwards; */\n\n  /* Keyframe animation for the slide down effect on page load. */\n  @keyframes slideDown {\n    0% {\n      margin-top: 0px;\n    }\n    100% {\n      opacity: 1;\n      margin-top: 45px;\n      padding: 10px;\n    }\n  }\n  /* animation: slideDown 1s linear 0s 1 forwards; */\n\n  /* Animation for neon light pulsate effect. */\n  @keyframes pulsate {\n    100% {\n      /* Larger blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #e6af2e,\n        0 0 80px #e6af2e, 0 0 90px #e6af2e, 0 0 100px #e6af2e, 0 0 150px #e6af2e;\n    }\n    0% {\n      /* A slightly smaller blur radius */\n      text-shadow: 0 0 4px #fff, 0 0 10px #fff, 0 0 18px #fff, 0 0 38px #e6af2e,\n        0 0 73px #e6af2e, 0 0 80px #e6af2e, 0 0 94px #e6af2e, 0 0 140px #e6af2e;\n    }\n  }\n  /* pulsate 0.11s ease-in-out infinite alternate; */\n`;\n\n/** Header Exports */\nexport default Header;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { Header } from \"./\";\n\n/** View Types */\ntype Props = {\n  /** Header displayed at top of page. */\n  headerText?: string;\n  /** Centers content in view. */\n  center?: boolean;\n  /** Typing for the node which holds the children (the body of the page). */\n  children?: ReactNode;\n};\n\n/** Component that wraps and displays the main body of the view, and displays the banner for which view is currently routed to. */\nconst View = ({ headerText, children }: Props) => {\n  return (\n    <ViewStyle>\n      <HeaderDiv>{headerText && <Header text={headerText} />}</HeaderDiv>\n      <BodyStyle>{children}</BodyStyle>\n    </ViewStyle>\n  );\n};\n\n/** View Styles */\nconst ViewStyle = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n\n  @media screen and (max-width: 1200px) {\n    align-items: center;\n  }\n`;\n\nconst BodyStyle = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin-top: 75px;\n  padding-left: 30px;\n  padding-right: 30px;\n  z-index: 10;\n  overflow: scroll;\n\n  @media screen and (max-width: 1200px) {\n    height: auto;\n    margin-left: 0;\n    margin-top: 0px;\n    padding: 0px 20px;\n  }\n`;\n\nconst HeaderDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  z-index: 11;\n`;\n\n/** View Exports */\nexport default View;\n","export default __webpack_public_path__ + \"static/media/angularMovieDBImg.c8bfe0f3.png\";","export default __webpack_public_path__ + \"static/media/reactECommerceStoreImg.9f7999c6.png\";","export default __webpack_public_path__ + \"static/media/angularGolfScorecardImg.58424e1e.jpeg\";","import styled from \"styled-components\";\nimport { View } from \"../components\";\nimport { Card } from \"../components\";\nimport movieDbImg from \"../assets/images/angularMovieDBImg.png\";\nimport ecommerceStoreImg from \"../assets/images/reactECommerceStoreImg.png\";\nimport golfScorecardImg from \"../assets/images/angularGolfScorecardImg.jpeg\";\nimport mdAutomotiveImg from \"../assets/images/md-automotive-repair.jpeg\";\n\n/** Array of objects that holds data to be displayed in the card component. */\nconst projects = [\n  {\n    title: \"MD Automotive\",\n    description:\n      \"Best viewed on desktop or mobile! A local automotive company page made to view mechanic services and contact the mechanic!\",\n    image: mdAutomotiveImg,\n    site: \"https://www.mdautomotive.repair\",\n    mobile: false,\n  },\n  {\n    title: \"Angular MovieDB\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 and The Movie Database API to create a site you can rate and review movies you see!\",\n    image: movieDbImg,\n    site: \"https://teras43.github.io/movieGroupProject/\",\n    mobile: true,\n  },\n  {\n    title: \"React E-Commerce Store\",\n    description:\n      \"Best viewed on mobile! Uses React.js and a mock API to create a site you can browse items and add them to your cart to buy.\",\n    image: ecommerceStoreImg,\n    site: \"https://teras43.github.io/eCommerceStore/\",\n    mobile: true,\n  },\n  {\n    title: \"Angular Golf Scorecard\",\n    description:\n      \"Best viewed on mobile! Uses Angular 11 to select a golf course, add players to your golf game and keep track of all the scores for each person.\",\n    image: golfScorecardImg,\n    site: \"https://teras43.github.io/golf-scorecard-angular/\",\n    mobile: true,\n  },\n];\n\n/** The landing page view of the app. */\nconst HomePage = () => {\n  /** Variable that holds the project cards mapped to each project in the projects array. */\n  const allProjects = projects.map((project, index) => {\n    return (\n      <Card\n        key={index}\n        image={project.image}\n        title={project.title}\n        description={project.description}\n        site={project.site}\n        mobile={project.mobile}\n        headerText=\"My work\"\n      ></Card>\n    );\n  });\n\n  return (\n    <View headerText=\"My work\">\n      <BodyWrapper>\n        <ProjectDiv>{allProjects}</ProjectDiv>\n      </BodyWrapper>\n    </View>\n  );\n};\n\n/** Home View Styles */\nconst BodyWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst ProjectDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 100px;\n  margin: auto;\n  opacity: 0;\n  margin-top: 70px;\n\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: fadeIn 1s linear 0.2s 1 forwards;\n`;\n\n/** Home View Exports */\nexport default HomePage;\n","export default __webpack_public_path__ + \"static/media/md-automotive-repair.9ef59bc5.jpeg\";","import { View } from \"../components\";\nimport { Card } from \"../components\";\nimport styled from \"styled-components\";\nimport wordle_thumbnail from \"../assets/images/wordle_thumbnail.png\";\nimport redSwirl from \"../assets/images/red-swirls.jpeg\";\nimport hangManImg from \"../assets/images/javaScriptHangManImg.png\";\n// import myResume from \"../assets/pdf/CurtisBrandon_Resume_2021-11-11.pdf\";\n// import { Document, Page, pdfjs } from \"react-pdf\";\n\n/** Global worker for the PDF viewer used for the Resume. */\n// pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n/** Array of objects containing all the projects for this tab (Games). */\nconst gameProjects = [\n  {\n    title: \"Wordle\",\n    description:\n      \"Best viewed on mobile! A simple JavaScript wordle app that uses a random word API to get a new word each time you play!\",\n    image: wordle_thumbnail,\n    site: \"https://teras43.github.io/wordleGame/\",\n    mobile: true,\n  },\n  {\n    title: \"Candy Crush\",\n    description:\n      \"Best viewed on Desktop! A quick and simple candy crush game using React!\",\n    image: redSwirl,\n    site: \"https://teras43.github.io/candy-crush/\",\n    mobile: false,\n  },\n  {\n    title: \"JavaScript Hangman\",\n    description:\n      \"Best viewed on desktop! A simple JavaScript game that lets you play a game of hangman!\",\n    image: hangManImg,\n    site: \"https://teras43.github.io/Hang-Man/\",\n    mobile: false,\n  },\n];\n\n/** The view component for the Games tab. */\nconst Games = () => {\n  const gameProjectCards = gameProjects.map((project, index) => {\n    return (\n      <Card\n        key={index}\n        image={project.image}\n        title={project.title}\n        description={project.description}\n        site={project.site}\n        mobile={project.mobile}\n        headerText=\"My games\"\n      ></Card>\n    );\n  });\n\n  return (\n    <View headerText=\"My games\">\n      <BodyWrapper>\n        <ProjectDiv>{gameProjectCards}</ProjectDiv>\n      </BodyWrapper>\n    </View>\n  );\n};\n\n/** Game View Styles */\nconst BodyWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst ProjectDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  margin-top: 60px;\n  opacity: 0;\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: fadeIn 1s linear 0.2s 1 forwards;\n\n  @media screen and (max-width: 799px) {\n    margin-top: 10;\n  }\n`;\n\n/** Exports */\nexport default Games;\n","export default __webpack_public_path__ + \"static/media/wordle_thumbnail.adec7ae0.png\";","export default __webpack_public_path__ + \"static/media/red-swirls.ff8833ec.jpeg\";","export default __webpack_public_path__ + \"static/media/javaScriptHangManImg.c2e8fdc5.png\";","export default __webpack_public_path__ + \"static/media/linkedin.e65fd24a.png\";","import styled from \"styled-components\";\nimport { View } from \"../components\";\nimport { ContactCardSection } from \"../components\";\n// import fbImg from \"../assets/images/facebook.png\";\nimport liImg from \"../assets/images/linkedin.png\";\n\ntype Props = {\n  currentRoute: string;\n};\n\n/** The view component for the Contact page. */\nconst Contact = ({ currentRoute }: Props) => {\n  let socialArray = [liImg];\n  let socialLinkArray = [\n    // \"https://www.facebook.com/brandcurtis/\",\n    \"https://www.linkedin.com/in/brandcurtis/\",\n  ];\n  // let socialMask = [\"Facebook\", \"LinkedIn\"];\n  let socialMask = [\"LinkedIn\"];\n\n  return (\n    <View headerText=\"Lets get in touch\">\n      <BodyWrapper>\n        <CardDiv>\n          <BorderDiv>\n            <ContactDiv>\n              <ContactCardSection\n                sectionTitle={\"You can email me:\"}\n                sectionText={\"Brandcurtis43@gmail.com\"}\n                textMask={\"Brandcurtis43@gmail.com\"}\n                textLink={\"email\"}\n              />\n              <ContactCardSection\n                sectionTitle={\"Some socials:\"}\n                imgPath={socialArray}\n                textLink={true}\n                sectionText={socialLinkArray}\n                textMask={socialMask}\n              />\n              <ContactCardSection\n                sectionTitle={\"Github if you'd like:\"}\n                sectionText={\"https://github.com/Teras43\"}\n                textMask={\"Link to Github\"}\n                textLink={true}\n              />\n            </ContactDiv>\n          </BorderDiv>\n        </CardDiv>\n        <AttrDiv>\n          {/* <div>\n            Facebook Icon made by{\" \"}\n            <a\n              href=\"https://www.flaticon.com/authors/ruslan-babkin\"\n              title=\"Ruslan Babkin\"\n            >\n              Ruslan Babkin\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div> */}\n          <div>\n            LinkedIn Icon made by{\" \"}\n            <a href=\"https://www.freepik.com\" title=\"Freepik\">\n              Freepik\n            </a>{\" \"}\n            from{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              www.flaticon.com\n            </a>\n          </div>\n        </AttrDiv>\n      </BodyWrapper>\n    </View>\n  );\n};\n\n/** Contact View Styles */\nconst BodyWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst CardDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: 400px;\n  height: 25em;\n  margin-right: 15px;\n  margin-left: 15px;\n  margin-top: 25px;\n  margin-bottom: 50px;\n  border: 1px solid #ffffff9d;\n  border-radius: 10px;\n  box-shadow: 0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #ff3a20,\n    0 0 0.8rem #ff3a20, 0 0 2.8rem #ff3a20, inset 0 0 1.3rem #ff3a20;\n  background-color: #141414;\n  align-items: center;\n\n  @media (min-width: 700px) {\n    max-width: 800px;\n    height: 32em;\n  }\n\n  @media (min-width: 1100px) {\n    max-width: 1000px;\n    height: 30em;\n  }\n\n  @media (min-width: 1300px) {\n    max-width: 1200px;\n    height: 35em;\n  }\n\n  @media (min-width: 1300px) {\n    max-width: 1200px;\n    height: 35em;\n  }\n`;\n\nconst BorderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 95%;\n  border: 1px solid #a3a3a3;\n  border-radius: 5px;\n  margin: 8px;\n`;\n\nconst ContactDiv = styled.div`\n  height: 90%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  padding-top: 20px;\n\n  @media (min-width: 900px) {\n    flex-direction: row;\n  }\n`;\n\nconst AttrDiv = styled.div`\n  height: 8em;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  justify-content: flex-end;\n\n  a {\n    text-decoration: none;\n    color: white;\n  }\n`;\n\n/** Contact View Exports */\nexport default Contact;\n","export default __webpack_public_path__ + \"static/media/dark_blue_wall.f0369174.png\";","export default __webpack_public_path__ + \"static/media/dark_yellow_wall.73769f0d.png\";","export default __webpack_public_path__ + \"static/media/dark_red_wall.87ea9a37.png\";","import { ReactNode, useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport * as Views from \"../views\";\nimport wallBlueImg from \"../../src/assets/images/dark_blue_wall.png\";\nimport wallYellowImg from \"../../src/assets/images/dark_yellow_wall.png\";\nimport wallRedImg from \"../../src/assets/images/dark_red_wall.png\";\nimport { BkgdTxt } from \"./\";\n\n/** Navbar Types */\ntype NavBarItemProps = {\n  /** Name of a view as a string. */\n  viewName: string;\n  /** Function that runs to set the current state of the view. */\n  onRouteSelect: (viewName: string) => void;\n  /** The boolean passed in telling the component whether or not the current route displayed is the 'selected' route / view, or currently active route / view. */\n  isSelected: boolean;\n  /** String of the currently selected route. */\n  currentRoute: string;\n};\n\ntype GenericProps = {\n  currentRoute?: string;\n};\n\n/** Navbar - Controls displaying of the views and navigation for each view. */\nconst NavBar = () => {\n  /** State that tells the component whether the Enter Site button has been clicked and the page needs to fully render. */\n  const [loadSite, setLoadSite] = useState<boolean>(false);\n  /** The variable that holds the current view to display as a header, pulled from the Views folder 'as Record<string, () => ReactNode>'.  */\n  const ViewType = Views as Record<\n    string,\n    ({ currentRoute }: GenericProps) => ReactNode\n  >;\n  /** The state for the routing used in the webapp. Initialized at \"Home\" route. */\n  const [currentRoute, setCurrentRoute] = useState<string>(\"Games\");\n  /** Variable that holds the object with names of each view to set up a route to. */\n  const viewNames = Object.keys(Views);\n\n  /** The function that checks the state to see if the button has been clicked to render the rest of the page. */\n  const setSiteState = useCallback((boolean) => {\n    setLoadSite(boolean);\n    return;\n  }, []);\n\n  /** The function that accesses the Views object (imported) and maps item styling and properties on each view, to display in the Navbar in the view. */\n  const getRoutes = useCallback(() => {\n    /** The map on the object with each view name. */\n    return viewNames.map((viewName, index) => (\n      <NavBarItem\n        key={index}\n        onRouteSelect={setCurrentRoute}\n        viewName={viewName}\n        isSelected={currentRoute === viewName}\n        currentRoute={currentRoute}\n      ></NavBarItem>\n    ));\n  }, [currentRoute, viewNames]);\n\n  return (\n    <PageWrapper viewName={currentRoute}>\n      <NavContainer>\n        {loadSite && <NavBarStyle>{getRoutes()}</NavBarStyle>}\n      </NavContainer>\n      {loadSite && ViewType[currentRoute]?.({ currentRoute })}\n      <BkgdTxt\n        loadSite={loadSite}\n        setSiteState={setSiteState}\n        currentView={currentRoute}\n      />\n    </PageWrapper>\n  );\n};\n\n/** Navbar Item component that takes the view(route) names and changes the displayed name to be a capitalized version of the view name. It applies styling and attributes for selection and routing as well. */\nconst NavBarItem = ({\n  viewName,\n  currentRoute,\n  onRouteSelect,\n  isSelected,\n}: NavBarItemProps) => {\n  const formatRouteName = useCallback(\n    () => viewName.replace(/([A-Z]+)/g, \" $1\"),\n    [viewName]\n  );\n\n  return (\n    <NavBarListItemStyle\n      viewName={viewName}\n      isSelected={isSelected}\n      currentRoute={currentRoute}\n    >\n      <NavBarItemStyle\n        // currentRoute={currentRoute}\n        isSelected={isSelected}\n        onClick={() => onRouteSelect(viewName)}\n      >\n        {formatRouteName()}\n      </NavBarItemStyle>\n    </NavBarListItemStyle>\n  );\n};\n\n/** Accessability settings for animation. */\n// @media screen and (prefers-reduced-motion) {\n//   *element w/ animation here* {\n//     animation: none;\n//   }\n// }\n\n/** Navbar Styles */\nconst PageWrapper = styled.div<{ viewName: string }>`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  background-image: ${({ viewName }) =>\n    viewName === \"Games\"\n      ? `url(${wallBlueImg})`\n      : viewName === \"Webapps\"\n      ? `url(${wallYellowImg})`\n      : viewName === \"Contact\"\n      ? `url(${wallRedImg})`\n      : `url(${wallBlueImg})`};\n  background-color: #010a01;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: 100% 100%;\n  text-align: center;\n  font-family: \"Indie Flower\", cursive;\n  flex-direction: column;\n\n  @media screen and (max-width: 1200px) {\n  }\n`;\n\nconst NavContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 15%;\n  left: 5%;\n  text-align: left;\n  z-index: 100;\n\n  @media screen and (max-width: 1200px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 5rem;\n    justify-content: center;\n    text-align: center;\n  }\n`;\n\n// const NavContainer = styled.div`\n//   width: 100%;\n//   display: flex;\n//   justify-content: center;\n// `;\n\nconst NavBarStyle = styled.div`\n  position: relative;\n  transform: skewY(-15deg);\n\n  @media screen and (max-width: 1200px) {\n    position: static;\n    transform: none;\n    display: flex;\n    width: 100%;\n  }\n`;\n\n// const NavBarStyle = styled.div`\n//   width: 100%;\n//   max-width: 1275px;\n//   height: 70px;\n//   position: fixed;\n//   font-size: 16px;\n//   background: none;\n//   display: flex;\n//   justify-content: space-evenly;\n//   align-items: center;\n//   text-decoration: none;\n//   z-index: 20;\n\n//   @media (min-width: 1275px) {\n//     margin: auto;\n//   }\n// `;\n\nconst NavBarListItemStyle = styled.div<{\n  viewName: string;\n  isSelected: boolean;\n  currentRoute: string;\n}>`\n  position: relative;\n  list-style: none;\n  width: 200px;\n  background: ${({ isSelected, viewName, currentRoute }) =>\n    isSelected\n      ? viewName === \"Games\"\n        ? \"#1b345c\"\n        : viewName === \"Webapps\"\n        ? \"#FBAF00\"\n        : \"#FF3A20\"\n      : currentRoute === \"Games\"\n      ? \"#26293d\"\n      : currentRoute === \"Webapps\"\n      ? \"#3d3c26\"\n      : \"#3d2626\"};\n  padding-left: 10px;\n  z-index: ${({ viewName }) =>\n    viewName === \"Games\" ? \"2\" : viewName === \"Webapps\" ? \"3\" : \"1\"};\n  transition: 0.5s;\n  transform: ${({ isSelected }) => (isSelected ? \"translateX(50px)\" : \"none\")};\n\n  @media screen and (max-width: 1200px) {\n    transform: none;\n    z-index: 0;\n    width: 100%;\n    opacity: ${({ isSelected }) => (isSelected ? \"1\" : \"0.7\")};\n  }\n\n  :hover {\n    background: ${({ isSelected, viewName }) =>\n      isSelected\n        ? viewName === \"Games\"\n          ? \"#1b345c\"\n          : viewName === \"Webapps\"\n          ? \"#FBAF00\"\n          : \"#FF3A20\"\n        : viewName === \"Games\"\n        ? \"#1b345c\"\n        : viewName === \"Webapps\"\n        ? \"#FBAF00\"\n        : \"#FF3A20\"};\n    transform: translateX(50px);\n\n    @media screen and (max-width: 1200px) {\n      transform: none;\n    }\n\n    ::before {\n      background: ${({ isSelected, viewName }) =>\n        isSelected\n          ? viewName === \"Games\"\n            ? \"#1b345c\"\n            : viewName === \"Webapps\"\n            ? \"#FBAF00\"\n            : \"#FF3A20\"\n          : viewName === \"Games\"\n          ? \"#1b345c\"\n          : viewName === \"Webapps\"\n          ? \"#FBAF00\"\n          : \"#FF3A20\"};\n\n      @media screen and (max-width: 1200px) {\n        background: none;\n      }\n    }\n\n    ::after {\n      background: ${({ isSelected, viewName }) =>\n        isSelected\n          ? viewName === \"Games\"\n            ? \"#1b345c\"\n            : viewName === \"Webapps\"\n            ? \"#FBAF00\"\n            : \"#FF3A20\"\n          : viewName === \"Games\"\n          ? \"#1b345c\"\n          : viewName === \"Webapps\"\n          ? \"#FBAF00\"\n          : \"#FF3A20\"};\n\n      @media screen and (max-width: 1200px) {\n        background: none;\n      }\n    }\n  }\n\n  ::before {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: -40px;\n    width: 40px;\n    height: 100%;\n    background: #3e3f46;\n    transform-origin: right;\n    transform: skewY(45deg);\n    transition: 0.5s;\n    background: ${({ isSelected, viewName }) =>\n      isSelected\n        ? viewName === \"Games\"\n          ? \"#1b345c\"\n          : viewName === \"Webapps\"\n          ? \"#FBAF00\"\n          : \"#FF3A20\"\n        : \"#3e3f46\"};\n\n    @media screen and (max-width: 1200px) {\n      position: static;\n      transform: none;\n      background: none;\n    }\n  }\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    top: -40px;\n    left: 0;\n    width: 100%;\n    height: 40px;\n    background: #35383e;\n    transform-origin: bottom;\n    transform: skewX(45deg);\n    transition: 0.5s;\n    background: ${({ isSelected, viewName }) =>\n      isSelected\n        ? viewName === \"Games\"\n          ? \"#1b345c\"\n          : viewName === \"Webapps\"\n          ? \"#FBAF00\"\n          : \"#FF3A20\"\n        : \"#3e3f46\"};\n\n    @media screen and (max-width: 1200px) {\n      position: static;\n      transform: none;\n      background: none;\n    }\n  }\n\n  :last-child::after {\n    box-shadow: -120px 120px 20px rgba(0, 0, 0, 0.25);\n\n    @media screen and (max-width: 1200px) {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst NavBarItemStyle = styled.div<{ isSelected: boolean }>`\n  color: ${({ isSelected }) => (isSelected ? \"#fff\" : \"#999\")};\n  display: block;\n  letter-spacing: 0.05em;\n  transition: 0.5s;\n  line-height: 4em;\n  font-weight: 600;\n\n  @media screen and (max-width: 1200px) {\n    font-size: 20px;\n    width: 100%;\n  }\n\n  :hover {\n    color: #fff;\n  }\n`;\n\n// const NavBarItemStyle = styled.div<{\n//   isSelected: boolean;\n//   viewName: string;\n//   currentRoute: string;\n// }>`\n//   margin-right: 4px;\n//   padding-left: 18px;\n//   font-size: 20px;\n//   user-select: none;\n//   cursor: pointer;\n//   opacity: ${({ isSelected }) => (isSelected ? \"1\" : \"0.5\")};\n//   color: ${({ isSelected, viewName }) =>\n//     isSelected && viewName === \"Games\"\n//       ? \"#FFF\"\n//       : isSelected && viewName === \"Webapps\"\n//       ? \"#FFE7AD\"\n//       : isSelected && viewName === \"Contact\"\n//       ? \"#FFC9C2\"\n//       : \"#FFF\"};\n//   text-shadow: ${({ isSelected, viewName }) =>\n//     isSelected && viewName === \"Games\"\n//       ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n//     0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 100px #1b356c`\n//       : isSelected && viewName === \"Webapps\"\n//       ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n//     0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00`\n//       : isSelected && viewName === \"Contact\"\n//       ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n//     0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20`\n//       : \"none\"};\n//   padding-right: 18px;\n\n//   @media (min-width: 460px) {\n//     font-size: 28px;\n//   }\n\n//   @media (min-width: 865px) {\n//     font-size: 32px;\n//   }\n\n//   @media (min-width: 1200px) {\n//     font-size: 42px;\n//   }\n// `;\n\n/** Navbar Exports */\nexport default NavBar;\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\n/** Text Component Types */\n\ntype Props = {\n  /** Whether to justify the text to the center, left, right, top or bottom. Default: left */\n  align?: \"center\" | \"left\" | \"right\";\n  /** Bolds the text. Default: false */\n  bold?: boolean;\n  /** Sets text to be italic. Default: false */\n  italic?: boolean;\n  /** Colors the text. Default: black */\n  color?: string;\n  /** Sets the font size in pixels. Default: 14 */\n  fontSize?: number;\n  /** Flags the text as a link (of a certain type if chosen, will use a generic if not),\n   * and will be rendered as an <a> tag instead. Default: false */\n  link?: boolean | \"email\" | \"telephone\" | \"textMessage\";\n  /** Tells the component whether to display an underline on the link (if set). Default: true */\n  underline?: boolean;\n  /** Masks a link with different text. Ignored if the text is not a link. */\n  mask?: string;\n  /** Indicates whether to open a link in a new tab or not. Default: true */\n  newTab?: boolean;\n  /** Typing for the node which holds the children (if any). */\n  children?: ReactNode;\n};\n\n/** A versatile component for rendering text using different props to achieve different effects. Effects are displayed in the types above. */\nconst Text = ({\n  align = \"left\",\n  bold = false,\n  italic = false,\n  color = \"black\",\n  fontSize = 14,\n  link = false,\n  underline = true,\n  mask,\n  newTab = true,\n  children,\n}: Props) =>\n  !link ? (\n    <TextRenderer\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {children}\n    </TextRenderer>\n  ) : (\n    <LinkRenderer\n      href={\n        link === \"email\"\n          ? `mailto:${children as string}`\n          : link === \"telephone\"\n          ? `tel:${children as string}`\n          : link === \"textMessage\"\n          ? `sms:${children as string}`\n          : (children as string)\n      }\n      target={newTab ? \"_blank\" : undefined}\n      underline={underline}\n      align={align}\n      bold={bold}\n      italic={italic}\n      color={color}\n      fontSize={fontSize}\n    >\n      {mask ? mask : children}\n    </LinkRenderer>\n  );\n\n/** Text Component Styles */\n\nconst TextRenderer = styled.div<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\nconst LinkRenderer = styled.a<Omit<Props, \"children\" | \"link\">>`\n  background-color: transparent;\n  display: flex;\n  text-decoration: ${({ underline }) => (underline ? \"underline\" : \"none\")};\n  text-align: ${({ align }) => align};\n  font-weight: ${({ bold }) => (bold ? \"bold\" : 400)};\n  font-style: ${({ italic }) => (italic ? \"italic\" : \"none\")};\n  font-size: ${({ fontSize }) => `${fontSize}px`};\n  color: ${({ color }) => color};\n`;\n\n/** Text Component Exports */\n\nexport default Text;\n","import styled from \"styled-components\";\nimport { Text } from \"../components\";\n\n/** Types */\ntype Props = {\n  /** Title of the project in the card. */\n  title: string;\n  /** Small description of project in card. */\n  description: string;\n  /** Thumbnail image for project in card. */\n  image: string;\n  /** Website the project is hosted at. */\n  site: string;\n  /** Will size thumbnail image to mobile or desktop size. */\n  mobile?: boolean;\n  /** Header text for the view the card will be sitting in. */\n  headerText: string;\n};\n\n/** Component that decides the data / styling for each project. Each card representing a 'section'. */\nconst Card = ({\n  title,\n  description,\n  image,\n  site,\n  mobile = true,\n  headerText,\n}: Props) => {\n  /** Variable that holds the current font sizes for the title and description. */\n  let fontSizeTitle = 18;\n  let fontSizeDesc = 16;\n  /** If statement that checks the screen width, then passes in the variable for the text size for the card project text. */\n  // eslint-disable-next-line no-restricted-globals\n  if (screen.width >= 865) {\n    fontSizeTitle = 40;\n    fontSizeDesc = 34;\n  } else {\n    fontSizeTitle = 22;\n    fontSizeDesc = 20;\n  }\n  /** Function that simply opens the website of the project clicked. */\n  const navSite = (site: any) => {\n    window.open(site);\n  };\n\n  return (\n    <CardDiv headerText={headerText}>\n      <BorderDiv>\n        <BackgroundDiv onClick={() => navSite(site)}>\n          <ImageDiv mobile={mobile}>\n            <ProjectImg\n              mobile={mobile}\n              src={image}\n              alt=\"Thumbnail for Project\"\n            ></ProjectImg>\n          </ImageDiv>\n        </BackgroundDiv>\n        <TextDiv>\n          <TitleDiv>\n            <Text\n              fontSize={fontSizeTitle}\n              bold\n              link\n              mask={title}\n              color={\"white\"}\n              align={\"center\"}\n            >\n              {site}\n            </Text>\n          </TitleDiv>\n          <DescriptionDiv>\n            <Text\n              fontSize={fontSizeDesc}\n              link\n              underline={false}\n              mask={description}\n              color={\"white\"}\n              align={\"center\"}\n            >\n              {site}\n            </Text>\n          </DescriptionDiv>\n          <BtnDiv headerText={headerText}>\n            <a href={site} target=\"_blank\" rel=\"noreferrer\" id=\"navBtn\">\n              <span>\n                {headerText === \"My games\" ? \"Play Game!\" : \"Visit App!\"}\n              </span>\n              <i></i>\n            </a>\n          </BtnDiv>\n        </TextDiv>\n      </BorderDiv>\n    </CardDiv>\n  );\n};\n\n/** Card Component Styles */\nconst CardDiv = styled.div<{ headerText: string }>`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  max-width: 1300px;\n  margin-right: 15px;\n  margin-left: 15px;\n  margin-top: 25px;\n  margin-bottom: 50px;\n  cursor: pointer;\n  border: 1px solid #ffffff9d;\n  border-radius: 10px;\n  box-shadow: ${({ headerText }) =>\n    headerText === \"My games\"\n      ? \"0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c, 0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;\"\n      : \"0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #FBAF00, 0 0 0.8rem #FBAF00, 0 0 2.8rem #FBAF00, inset 0 0 1.3rem #FBAF00;\"};\n  background-color: #141414;\n  align-items: center;\n  justify-content: center;\n  transition: 0.3s;\n\n  :hover {\n    box-shadow: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"0 0 0.5rem #fff, 0 0 0.5rem #fff, 0 0 3rem #1b356c, 0 0 2rem #1b356c, 0 0 2rem #1b356c, inset 0 0 2rem #1b356c;\"\n        : \"0 0 0.5rem #fff, 0 0 0.5rem #fff, 0 0 3rem #FBAF00, 0 0 2rem #FBAF00, 0 0 2rem #FBAF00, inset 0 0 2rem #FBAF00;\"};\n    transition: 0.3s;\n  }\n`;\n\nconst BorderDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 98%;\n  width: 98%;\n  border: 1px solid #a3a3a3;\n  border-radius: 5px;\n  margin: 8px;\n\n  @media (min-width: 800px) {\n    flex-direction: row;\n  }\n`;\n\nconst BackgroundDiv = styled.div`\n  width: 70%;\n  height: 175px;\n  margin-top: 15px;\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.5);\n  justify-content: center;\n  align-items: center;\n  border: 1px solid #c2c2c2;\n  border-radius: 10px;\n  z-index: 10;\n  overflow: hidden;\n\n  @media (min-width: 410px) {\n    height: 225px;\n  }\n\n  @media (min-width: 800px) {\n    width: 50%;\n    height: 100%;\n    margin-left: 10px;\n    margin-bottom: 15px;\n  }\n`;\n\nconst ImageDiv = styled.div<{ mobile: boolean }>`\n  width: ${({ mobile }) => (mobile ? \"33%\" : \"100%\")};\n  height: 175px;\n  object-fit: contain;\n\n  @media (min-width: 410px) {\n    height: 225px;\n  }\n\n  @media screen and (max-width: 550px) {\n    width: ${({ mobile }) => (mobile ? \"40%\" : \"100%\")};\n  }\n\n  @media (min-width: 800px) {\n    height: 100%;\n    width: ${({ mobile }) => (mobile ? \"50%\" : \"100%\")};\n  }\n`;\n\nconst ProjectImg = styled.img<{ mobile: boolean }>`\n  height: 100%;\n  width: 100%;\n\n  @media (min-width: 800px) {\n    border-radius: ${({ mobile }) => (!mobile ? \"10px\" : \"0\")};\n  }\n`;\n\nconst TextDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 70%;\n  margin: auto;\n  margin-top: 0;\n  margin-bottom: 10px;\n\n  @media (min-width: 800px) {\n    width: 45%;\n  }\n`;\n\nconst TitleDiv = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  margin-top: 10px;\n  margin-bottom: 6px;\n\n  @media screen and (max-width: 850px) {\n    font-size: 28;\n  }\n`;\n\nconst DescriptionDiv = styled.div`\n  display: flex;\n`;\n\nconst BtnDiv = styled.div<{ headerText: string }>`\n  --blueTheme: #aac4fc;\n  --goldTheme: #fbaf00;\n\n  margin-top: 60px;\n  display: flex;\n\n  @media screen and (max-width: 1200px) {\n    margin-bottom: 30px;\n  }\n\n  @media screen and (max-width: 1084px) {\n    margin-top: 30px;\n  }\n\n  #navBtn {\n    position: relative;\n    background: #444;\n    color: #fff;\n    text-decoration: none;\n    font-size: 1.5em;\n    letter-spacing: 0.1em;\n    font-weight: 400;\n    padding: 10px 30px;\n    transition: 0.5s;\n  }\n\n  #navBtn:hover {\n    letter-spacing: 0.25em;\n    background: ${({ headerText }) =>\n      headerText === \"My games\" ? \"var(--blueTheme)\" : \"var(--goldTheme)\"};\n    box-shadow: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"0 0 35px var(--blueTheme)\"\n        : \"0 0 35px var(--goldTheme)\"};\n    color: ${({ headerText }) =>\n      headerText === \"My games\" ? \"var(--blueTheme)\" : \"var(--goldTheme)\"};\n  }\n\n  #navBtn::before {\n    content: \"\";\n    position: absolute;\n    inset: 2px;\n    background: #27282c;\n  }\n\n  #navBtn span {\n    position: relative;\n    z-index: 1;\n  }\n\n  #navBtn i {\n    position: absolute;\n    inset: 0;\n    display: block;\n  }\n\n  #navBtn i::before {\n    content: \"\";\n    position: absolute;\n    top: -6px;\n    left: 100%;\n    transform: translateX(-50%);\n    width: 10px;\n    height: 10px;\n    background: #27282c;\n    border: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"2px solid var(--blueTheme)\"\n        : \"2px solid var(--goldTheme)\"};\n    transition: 0.5s;\n  }\n\n  #navBtn:hover i::before {\n    left: 0%;\n    transform: translateX(-50%) rotate(45deg);\n    box-shadow: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"40px 39px var(--blueTheme)\"\n        : \"40px 39px var(--goldTheme)\"};\n  }\n\n  #navBtn i::after {\n    content: \"\";\n    position: absolute;\n    bottom: -6px;\n    left: 0;\n    transform: translateX(-50%);\n    width: 10px;\n    height: 10px;\n    background: #27282c;\n    border: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"2px solid var(--blueTheme)\"\n        : \"2px solid var(--goldTheme)\"};\n    transition: 0.5s;\n  }\n\n  #navBtn:hover i::after {\n    left: 100%;\n    transform: translateX(-50%) rotate(-45deg);\n    box-shadow: ${({ headerText }) =>\n      headerText === \"My games\"\n        ? \"40px -39px var(--blueTheme)\"\n        : \"40px -39px var(--goldTheme)\"};\n  }\n`;\n\n/** Card Component Exports */\nexport default Card;\n","import { useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\n\n/** Prop typing for the Background Text Component. */\ntype BkgdProps = {\n  /** Prop that dictates whether to load the rest of the web page after the Enter Site button has been clicked. */\n  loadSite: any;\n  /** The function that will set the state of the site to based off the previous loadSite prop. */\n  setSiteState: any;\n  /** The current view displayed on the app. */\n  currentView: any;\n};\n\n/** Component that displays the neon text on the background image of the site. */\nconst BkgdTxt = ({ setSiteState, currentView }: BkgdProps) => {\n  let isClicked = useRef(false);\n\n  const EnterSiteFn = useCallback(() => {\n    setSiteState(true);\n    isClicked.current = true;\n  }, [setSiteState]);\n\n  return (\n    <TextContainer>\n      <BackgroundTextContainer\n        currentView={currentView}\n        isClicked={isClicked.current}\n      >\n        <WelcomeSmallTxt\n          currentView={currentView}\n          isClicked={isClicked.current}\n        >\n          My Name Is\n        </WelcomeSmallTxt>\n        <NameTxt currentView={currentView} isClicked={isClicked.current}>\n          Brandon Curtis\n        </NameTxt>\n      </BackgroundTextContainer>\n      <BtnContainer>\n        <EnterBtn\n          currentView={currentView}\n          isClicked={isClicked.current}\n          onClick={() => EnterSiteFn()}\n        >\n          Enter\n        </EnterBtn>\n      </BtnContainer>\n    </TextContainer>\n  );\n};\n\n/** Background Text Component Styles */\nconst TextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  justify-content: flex-start;\n  align-items: center;\n  font-weight: 400;\n\n  @keyframes FadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  animation: FadeIn 1s linear;\n`;\n\nconst BackgroundTextContainer = styled.div<{\n  isClicked: boolean;\n  currentView: any;\n}>`\n  border: ${({ isClicked }) =>\n    isClicked ? `0.3rem solid rgba(255, 255, 255, 0.3)` : `0.3rem solid #fff`};\n  border-radius: 2rem;\n  padding: 0.7em;\n  box-shadow: ${({ currentView }) =>\n    currentView === \"Games\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;`\n      : currentView === \"Webapps\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #FBAF00,\n    0 0 0.8rem #FBAF00, 0 0 2.8rem #FBAF00, inset 0 0 1.3rem #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #FF3A20,\n    0 0 0.8rem #FF3A20, 0 0 2.8rem #FF3A20, inset 0 0 1.3rem #FF3A20;`\n      : `0 0 0.2rem #fff, 0 0 0.2rem #fff, 0 0 2rem #1b356c,\n    0 0 0.8rem #1b356c, 0 0 2.8rem #1b356c, inset 0 0 1.3rem #1b356c;`};\n`;\n\nconst WelcomeSmallTxt = styled.div<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0.3 : 1)};\n  font-family: \"Dancing Script\", cursive;\n  font-size: 1.5em;\n  color: #fff;\n  margin-right: 35px;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Resume\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n\n  @media (min-width: 700px) {\n    font-size: 2.5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 3.5em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 4em;\n  }\n\n  @media (min-width: 1700px) {\n    font-size: 4.5em;\n  }\n\n  @media (min-width: 1890px) {\n    font-size: 5.5em;\n  }\n`;\n\nconst NameTxt = styled.div<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0.65 : 1)};\n  font-family: \"Dancing Script\", cursive;\n  font-size: 4em;\n  font-weight: 700;\n  color: #fff;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Games\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n\n  @media (min-width: 700px) {\n    font-size: 5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 6em;\n  }\n\n  @media (min-width: 1050px) {\n    font-size: 7em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 9em;\n  }\n\n  @media (min-width: 1700px) {\n    font-size: 10em;\n  }\n\n  @media (min-width: 1890px) {\n    font-size: 11em;\n  }\n\n  @media (min-width: 2080px) {\n    font-size: 12em;\n  }\n\n  @media (min-width: 2265px) {\n    font-size: 13em;\n  }\n\n  @media (min-width: 2445px) {\n    font-size: 14em;\n  }\n\n  @media (min-width: 2630px) {\n    font-size: 15em;\n  }\n\n  /* The flicker keyframe animation is a flickering color, almost like a lightbulb going out for a split second. */\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57%,\n    100% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #1b356c,\n        0 0 80px #1b356c, 0 0 90px #1b356c, 0 0 100px #1b356c, 0 0 150px #1b356c;\n    }\n    8%,\n    20%,\n    24%,\n    64%,\n    78% {\n      text-shadow: none;\n    }\n  }\n\n  animation: ${({ isClicked }) =>\n    !isClicked ? `flicker 1s infinite 1.2s alternate;` : `none`};\n`;\n\nconst EnterBtn = styled.button<{ isClicked: boolean; currentView: any }>`\n  opacity: ${({ isClicked }) => (isClicked ? 0 : 1)};\n  font-family: \"Bebas Neue\", cursive;\n  cursor: pointer;\n  width: 200px;\n  height: 45px;\n  background: none;\n  border: none;\n  font-size: 2.5em;\n  transform: rotate(-10deg);\n  color: #2a2727;\n  text-shadow: ${({ currentView }) =>\n    currentView === \"Games\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`\n      : currentView === \"Webapps\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FBAF00,\n    0 0 82px #FBAF00, 0 0 92px #FBAF00, 0 0 102px #FBAF00, 0 0 151px #FBAF00;`\n      : currentView === \"Contact\"\n      ? `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #FF3A20,\n    0 0 82px #FF3A20, 0 0 92px #FF3A20, 0 0 102px #FF3A20, 0 0 151px #FF3A20;`\n      : `0 0 7px #fff, 0 0 10px #fff, 0 0 21px #fff, 0 0 42px #1b356c,\n    0 0 82px #1b356c, 0 0 92px #1b356c, 0 0 102px #1b356c, 0 0 151px #1b356c;`};\n\n  @media (min-width: 700px) {\n    font-size: 3.5em;\n  }\n\n  @media (min-width: 900px) {\n    font-size: 4.5em;\n  }\n\n  @media (min-width: 1050px) {\n    font-size: 5.5em;\n  }\n\n  @media (min-width: 1300px) {\n    font-size: 5.5em;\n  }\n\n  /** The switch keyframe animation quickly changes the color of the enter button from an \"off\" to an \"on\" color. */\n  @keyframes switch {\n    0% {\n      color: #2a2727;\n    }\n    100% {\n      color: #fff;\n    }\n  }\n  animation: switch 0.1s 1.2s forwards;\n`;\n\nconst BtnContainer = styled.div`\n  margin-top: 50px;\n`;\n\n/** Background Text Component Exports */\nexport default BkgdTxt;\n","import { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Text } from \".\";\n\n/** Typing on the props for ContactSection Component. */\ntype ContactProps = {\n  /** Text to display for the title of the section. */\n  sectionTitle: string;\n  /** Text to display within the section component. */\n  sectionText: any;\n  /** Prop to determine whether to load the image or text variant of the section component. */\n  imgPath?: any;\n  /** Mask for text if applicable. */\n  textMask?: any;\n  /** Flags the text as a link (of a certain type if chosen, will use a generic if not),\n   * and will be rendered as an <a> tag instead. Default: false */\n  textLink?: boolean | \"email\" | \"telephone\" | \"textMessage\";\n};\n\n/** Component for the Contact view that displays each section of the contact card body. */\nconst ContactCardSection = ({\n  imgPath = undefined,\n  sectionTitle,\n  sectionText,\n  textMask,\n  textLink = false,\n}: ContactProps) => {\n  let titleSection = 26;\n  let bodySection = 19;\n\n  // eslint-disable-next-line no-restricted-globals\n  if (screen.width >= 700) {\n    titleSection = 42;\n    bodySection = 28;\n  } else {\n    titleSection = 26;\n    bodySection = 19;\n  }\n\n  const getAllImgTxt = useCallback(() => {\n    return sectionText.map((text: string) => {\n      return text;\n    });\n  }, [sectionText]);\n\n  const getAllImgMasks = useCallback(() => {\n    return textMask.map((text: string) => {\n      return text;\n    });\n  }, [textMask]);\n\n  const getAllImgs = useCallback(() => {\n    let imgTxt = getAllImgTxt();\n    let maskTxt = getAllImgMasks();\n    return imgTxt.map((linkTxt: string, index: any) => {\n      return (\n        <IconImgsContainer key={index + 1}>\n          <SingleImgContainer>\n            <IconImg\n              src={imgPath[index]}\n              alt=\"Social Media Icon\"\n              onClick={() => {\n                window.open(`${linkTxt}`, \"_blank\");\n              }}\n            ></IconImg>\n          </SingleImgContainer>\n          <Text\n            fontSize={bodySection}\n            italic\n            color={\"white\"}\n            mask={maskTxt[index]}\n            link={textLink}\n          >\n            {linkTxt}\n          </Text>\n        </IconImgsContainer>\n      );\n    });\n  }, [bodySection, getAllImgMasks, getAllImgTxt, imgPath, textLink]);\n\n  return imgPath ? (\n    <SectionDiv imgPath={imgPath}>\n      <TitleDiv>\n        <Text\n          fontSize={titleSection}\n          italic\n          color={\"white\"}\n          // eslint-disable-next-line no-restricted-globals\n          align={screen.width <= 1200 ? \"center\" : \"left\"}\n        >\n          {sectionTitle}\n        </Text>\n      </TitleDiv>\n      <ContentDiv>{getAllImgs()}</ContentDiv>\n    </SectionDiv>\n  ) : (\n    <SectionDiv imgPath={imgPath}>\n      <TitleDiv>\n        <Text\n          fontSize={titleSection}\n          italic\n          color={\"white\"}\n          // eslint-disable-next-line no-restricted-globals\n          align={screen.width <= 1200 ? \"center\" : \"left\"}\n        >\n          {sectionTitle}\n        </Text>\n      </TitleDiv>\n      <ContentDiv>\n        <Text\n          fontSize={bodySection}\n          italic\n          color={\"white\"}\n          mask={textMask}\n          link={textLink}\n        >\n          {sectionText}\n        </Text>\n      </ContentDiv>\n    </SectionDiv>\n  );\n};\n\n/** Contact Section Styles */\nconst SectionDiv = styled.div<{ imgPath: any }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media screen and (max-width: 899px) {\n    padding-bottom: 50px;\n  }\n`;\n\nconst TitleDiv = styled.div``;\n\nconst ContentDiv = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst IconImgsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 10px;\n  margin-left: 10px;\n`;\n\nconst SingleImgContainer = styled.div`\n  height: 30px;\n  width: 30px;\n`;\n\nconst IconImg = styled.img`\n  height: 100%;\n  width: 100%;\n`;\n\n/** Contact Section Exports */\nexport default ContactCardSection;\n","import React from \"react\";\nimport \"./App.css\";\nimport { NavBar } from \"./components\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <NavBar />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}